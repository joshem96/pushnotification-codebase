[{"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/index.js":"1","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/App.js":"2","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/Header/Header.jsx":"3","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/original_ui/OriginalUi.jsx":"4","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/uiContainer/ControlPanelUI.jsx":"5","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/global_Info.js":"6","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/pushExample/pushExample.jsx":"7","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/usageLog/usageLog.jsx":"8","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/submitDeleteMessages/submitDeleteMessages.jsx":"9","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/apiStatus/apiStatus.jsx":"10","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/global_functions.js":"11","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/submitDeleteMessages/functions.js":"12","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/pushExample/functions.js":"13","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/apiStatus/functions.js":"14","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/globalComponents/blockHeader.jsx":"15"},{"size":245,"mtime":1672981710000,"results":"16","hashOfConfig":"17"},{"size":1210,"mtime":1709621613382,"results":"18","hashOfConfig":"17"},{"size":1256,"mtime":1686031866000,"results":"19","hashOfConfig":"17"},{"size":16185,"mtime":1672376726000,"results":"20","hashOfConfig":"17"},{"size":1110,"mtime":1709621613382,"results":"21","hashOfConfig":"17"},{"size":1760,"mtime":1709622182034,"results":"22","hashOfConfig":"17"},{"size":1922,"mtime":1680654510000,"results":"23","hashOfConfig":"17"},{"size":1394,"mtime":1672974126000,"results":"24","hashOfConfig":"17"},{"size":1552,"mtime":1709621613382,"results":"25","hashOfConfig":"17"},{"size":2835,"mtime":1680656308000,"results":"26","hashOfConfig":"17"},{"size":6509,"mtime":1709621844727,"results":"27","hashOfConfig":"17"},{"size":2049,"mtime":1672962896000,"results":"28","hashOfConfig":"17"},{"size":3994,"mtime":1682474448000,"results":"29","hashOfConfig":"17"},{"size":4624,"mtime":1679634292000,"results":"30","hashOfConfig":"17"},{"size":395,"mtime":1670908990000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"1odomve",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"36"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"36"},"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/index.js",["87"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport{Helmet} from \"react-helmet\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( <App /> );\n\n",[],"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/App.js",["88","89"],[],"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/Header/Header.jsx",["90","91","92","93"],[],"import React, {Suspense, useEffect,useState} from 'react';\r\nimport './Header.css';\r\nimport '../index.css';\r\n\r\nvar readmeLink = `\r\nhttps://github.com/joshem96/pushnotification-app/blob/main/README.md\r\n`;\r\n\r\nfunction Navlinks(){\r\n\r\n    const linksList = [\r\n        {link: readmeLink,linkName:'Readme'}\r\n    ]\r\n\r\n    return(\r\n        <>\r\n            <nav>\r\n                <ul>\r\n                    {linksList.map( (listItem,index) => (\r\n                        <li key={index}>\r\n                            <a target=\"_blank\" href={listItem.link}>{listItem.linkName}</a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Header() {\r\n  \r\n    return (\r\n    <>\r\n        <header>\r\n            {/* grey header */}\r\n            <div class='container main-header'>\r\n                <div class=\"mw-900 parent-container\">\r\n                    <h1>Push Notification Control Panel</h1>\r\n                    <Navlinks/> \r\n                </div>\r\n            </div>\r\n            {/* purple header  */}\r\n            <div class='container secondary-header'>\r\n                <div class='mw-900'></div>\r\n            </div>\r\n\r\n        </header>\r\n    </>\r\n    );\r\n  }\r\n\r\n  export {Header}","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/original_ui/OriginalUi.jsx",["94","95","96","97","98","99","100","101","102","103","104","105","106","107"],[],"\r\nimport { useEffect } from 'react';\r\nimport './index.css';\r\n\r\nfunction OriginalUI(){\r\n\r\n    useEffect(() => {\r\n\r\n        {/* // /////////////////////////////////////\r\n        // LOG USER INFORMATION SCRIP */}\r\n\r\n        var infoLogText = document.querySelector('.log-info')\r\n        var jotformApiScript = document.querySelector('#jotform-api-script');\r\n        var jotformApiInit = document.querySelector('#jotform-api-init')\r\n\r\n        var body = document.querySelector('body')\r\n\r\n        //FUNCTIONS>JS\r\n        //..............................\r\n\r\n        var apiScriptSrc; //used to retrieve API URL prior to removing from DOM\r\n\r\n        //delete script tag with jotform API URL\r\n        function deletePreviousAPIScript(APIscript){\r\n            apiScriptSrc = jotformApiScript.src\r\n            body.removeChild(APIscript)\r\n        }\r\n\r\n        //reinject the jotform URL inside a new script tag\r\n        function reinjectAPIScript(APIScript){\r\n            //debugger;\r\n            APIScript = document.createElement('script'); //create new script\r\n            APIScript.src = apiScriptSrc\r\n            body.appendChild(APIScript) \r\n\r\n            jotformApiScript = APIScript; //assign API script variable to be new script variable\r\n        }\r\n\r\n        //initialise the script\r\n        function initScript(API){\r\n            API.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \r\n\r\n        }\r\n\r\n        //....................................\r\n\r\n        function logUserInfo(){\r\n\r\n            //NOTE: for whatever reason, to get a fresh usage log the jotform API script needs to be reinserted on the page.\r\n            //otherwise window.JF.getUsage will spit out the same response as when the script was first ran\r\n\r\n            //deletePreviousAPIScript(jotformApiScript); //delete previous jotform script\r\n\r\n                // !note! this is currently not working, seems to be a bug\r\n            //reinjectAPIScript(jotformApiScript); //reinject previous jotform script\r\n\r\n            //initScript(window.JF); //initialise jotform script\r\n\r\n            //inject log onto the page\r\n            window.JF.getUsage(function(response){\r\n                //console.log(response);\r\n                infoLogText.innerHTML = JSON.stringify(response,null,2)\r\n                //onsole.log(JSON.stringify(response,null,2))\r\n            });\r\n\r\n        }\r\n\r\n\r\n        document.querySelector('#get-user-info-btn').addEventListener('click', () => {\r\n            logUserInfo();\r\n        });\r\n\r\n    // END USER INFORMATION SCRIPT \r\n\r\n\r\n    // /////////////////////////////////////\r\n    // DELETE ALL SUBMISSIONS CODE BELOW\r\n\r\n\r\n        document.querySelector('#delete-submissions-btn').addEventListener('click', () => {\r\n            deleteAllPushSubmissions();\r\n        });\r\n        \r\n        function deleteAllPushSubmissions(){\r\n            \r\n            //DELTE ALL SUBMISSIONS\r\n            //************************************************\r\n\r\n            //global variables\r\n            //-----------------\r\n\r\n            //ENTER API KEY\r\n            var apiKey = \"f78958f78beefa5e3e88255e7559579b\"\r\n\r\n            //ENTER FORM ID (of form you want to delete submissions for)\r\n            var formID = '221101537081038'\r\n\r\n\r\n            //************************************************\r\n\r\n            //fetch all submissions and then all delete submissions\r\n            //-----------------\r\n\r\n            //takes a string and injects it into the API status after 2 seconds\r\n            function APILogBuffer(log){\r\n                //after 10s, return the string (log)\r\n                setTimeout( () => {\r\n                    APIStatus.innerHTML =  ''+ log;\r\n                },2000)\r\n            }\r\n\r\n            var submissionResponses = '' //becomes array of all submission responses\r\n\r\n            //fetch all submission data into an array from the API\r\n            function fetchSubmissionResponses(){\r\n\r\n                window.JF.getFormSubmissions(formID, function(response){\r\n                    console.log('recieved form submission data')\r\n\r\n                    submissionResponses = response;\r\n\r\n                })\r\n            }\r\n\r\n            //DELETE ALL SUBMISSIONS\r\n            function deleteSubmissionResponses(){\r\n            //forEach form submission response, delete the data\r\n            //after this has been run, it will be as if a new form was created (no data)\r\n\r\n                debugger;\r\n                for(var i = 0; i < submissionResponses.length; i++){\r\n                debugger;\r\n                    //via the id, for each response delete the response submission\r\n                    window.JF.deleteSubmission(submissionResponses[i].id, function(response){\r\n                    debugger;\r\n                        /**\r\n                         successful response including a text message\r\n                        .\r\n                        */\r\n                        console.log(` ${response}`);\r\n                    })\r\n                    //console.log(submissionResponses[i].id);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            //when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\r\n            var whenAPILoaded = '';\r\n            whenAPILoaded = setInterval( () => {\r\n                if(window.JF != ''){\r\n\r\n                    //fetch submission responses\r\n                    fetchSubmissionResponses();\r\n\r\n                    //when API has retieved submission responses, run delete submission responses function\r\n                    var checkSubmissionsResponse = '';\r\n                    checkSubmissionsResponse = setInterval ( () => {\r\n                        if(submissionResponses != '') {\r\n                            deleteSubmissionResponses() \r\n                            clearInterval(checkSubmissionsResponse);\r\n                        }\r\n                    },100)\r\n\r\n                }\r\n\r\n                clearInterval(whenAPILoaded);\r\n                console.log('delete from submissions script has been ran');\r\n                APILogBuffer(' delete all submissions script has been ran')\r\n            },500)\r\n        \r\n\r\n        \r\n        }\r\n        \r\n        // Search for push messages and execute pop ups etc\r\n\r\n        // get all form responss\r\n        var submissionResponses  = ''\r\n        //get text response\r\n        var p_pushText = document.querySelector('.push-text');\r\n        var APIStatus = document.querySelector('.api-status');\r\n        //number array text lives in\r\n        var responseAnswerNumber = 4;\r\n        //variale that is the current form submission index. eg [1] would be the second post\r\n        //False is init\r\n        var submissionResponseArrayIndex = false;\r\n        //amount of time between each form data check\r\n        var dataRefreshTime = 1000;\r\n        //previous responses array\r\n        var lastSubmissionResponseLength  = '';\r\n        //api key\r\n\r\n        //form ID number\r\n        var formID = '221101537081038'\r\n\r\n        //takes a string and injects it into the API status after 2 seconds\r\n        function APILogBuffer(log){\r\n            //after 10s, return the string (log)\r\n            setTimeout( () => {\r\n                APIStatus.innerHTML =  ' '+ log;\r\n            },2000)\r\n        }\r\n\r\n        //get form data function\r\n        function getFormData() {\r\n            debugger;\r\n            console.log('getting form data')\r\n            APILogBuffer('getting form data')\r\n            \r\n            //make request to API to recieve push notification\r\n            window.JF.getFormSubmissions(formID, function(response){\r\n                debugger;\r\n                console.log('recieved form submission data')\r\n                APILogBuffer('recieved form submission data')\r\n                \r\n                //if there are form submissions, store the submissions in the applicable variables\r\n                if(response.length >= 1){\r\n                    submissionResponses = response;\r\n                    //reverse submissionResponse so the latest push is always at the end of the array\r\n                    submissionResponses.reverse();  \r\n                }else{\r\n                    console.log('no responses recieved yet')\r\n                    APILogBuffer('no responses recieved yet')\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n\r\n        \r\n\r\n        //trigger the setInterval to check for form push data\r\n        var checkForFormPushData = '';\r\n        function triggerFormPushDataSearch(){\r\n            debugger;\r\n            //check every second for a new post\r\n            checkForFormPushData = setInterval( () => {\r\n                debugger;\r\n                getFormData();\r\n                //if this is the first time push is being activated\r\n                if(submissionResponseArrayIndex === false && submissionResponses != ''){\r\n                    var pushResponse = submissionResponses[0].answers[responseAnswerNumber];\r\n                    console.log('the new submission is' +submissionResponses)\r\n                    //end push response to insertPush function, which will handle push response to screen\r\n                    insertPush(pushResponse.answer)\r\n                    //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\r\n                    submissionResponseArrayIndex = 0;\r\n\r\n                    //stop interval once push is up\r\n                    stopFormApi()\r\n                    \r\n                    lastSubmissionResponseLength = submissionResponses.length;\r\n                }\r\n                //else if this is not the first time the push has been activated\r\n                //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\r\n                //if so, send next push\r\n                else if (submissionResponseArrayIndex >= 0 && /* submissionResponseArrayIndex <= submissionResponses.length &&*/ submissionResponseArrayIndex < submissionResponses.length-1 && submissionResponses != ''){\r\n                    lastSubmissionResponseLength++;\r\n                    submissionResponseArrayIndex++;\r\n                    console.log('number of data in index is ' + submissionResponseArrayIndex + ' and data in actual array is' + submissionResponses.length)\r\n                    \r\n                    //pushResponse becomes the answer for the latest submission\r\n                    var pushResponse = submissionResponses[submissionResponseArrayIndex].answers[responseAnswerNumber];\r\n\r\n                        //end push response to insertPush function, which will handle push response to screen\r\n                    insertPush(pushResponse.answer);\r\n\r\n                    //stop interval once push is up\r\n                    stopFormApi()\r\n                }\r\n\r\n            },dataRefreshTime)\r\n        }\r\n\r\n        //stop searching for push data function\r\n        function stopFormApi(){\r\n\r\n        /* setTimeout( () => { */\r\n                console.log('API has stopped');\r\n                APILogBuffer('API has stopped');\r\n                clearInterval(checkForFormPushData);\r\n        /* },5000) */\r\n\r\n        }\r\n\r\n\r\n        //*********************************************************************************\r\n\r\n        //CREATE ELEMENT FUNCTION\r\n        var popUpContainer = '';\r\n        var popUpText = '';\r\n        var popUpTextWrap = '';\r\n        var exitButton = ''\r\n        function createAndAppendPopup(pushText){\r\n            debugger;\r\n            //create HTML elements (div wrapper and p text)\r\n            popUpContainer = document.createElement('div');\r\n            popUpContainer.classList.add('popup-container');\r\n            popUpTextWrap = document.createElement('div');\r\n            popUpTextWrap.classList.add('popup-text-wrap');\r\n            popUpText = document.createElement('p');\r\n            popUpText.classList.add('popup-text');\r\n            popUpText.innerHTML = 'placeholder';\r\n            exitButton = document.createElement('span');\r\n            exitButton.classList.add('popup-exit-button');\r\n            exitButton.innerHTML = 'X'\r\n            \r\n\r\n            //set initial styles\r\n            popUpContainer.style = \r\n            'display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 300px; height: 220px; background: #884ED5; color: black; z-index: 100; font-family: inherit; justify-content: flex-start; overflow: auto; flex-direction: column; border-radius: 8px;';\r\n            popUpTextWrap.style =\r\n            'display: flex; justify-content: center; align-items: center; flex-grow: 1'\r\n            popUpText.style = \r\n            'font-size: 20px; text-align: center; padding: 0px 15px; margin-top: 0px;';\r\n            exitButton.style = \r\n            'margin-right: 10px; margin-top: 5px; font-size: 25px; font-weight: bold; cursor: pointer; text-align: right';\r\n\r\n            //append pop up container\r\n            document.querySelector('body').appendChild(popUpContainer);\r\n\r\n            //append popup text and exit button\r\n            document.querySelector('body').appendChild(popUpContainer);\r\n            [exitButton,popUpTextWrap].forEach( element => {\r\n                popUpContainer.appendChild(element);\r\n            });\r\n            popUpTextWrap.appendChild(popUpText);\r\n        }\r\n        createAndAppendPopup();//create pop up\r\n\r\n\r\n\r\n\r\n        //insert push. use P for now\r\n        function insertPush(pushText){\r\n            p_pushText.innerHTML = pushText;\r\n        \r\n        //when push arrives, display push and insert push text\r\n        popUpContainer.style.display = 'flex'\r\n        popUpText.innerHTML = pushText;\r\n        //pushText.innerHTML = pushtext\r\n        }\r\n\r\n        //exit button click - hide push notificaiton and start searching for push data aain\r\n        exitButton.addEventListener(\"click\", () => {\r\n            triggerFormPushDataSearch();\r\n        popUpContainer.style.display = 'none';\r\n            console.log('start search')\r\n        APILogBuffer('start search')\r\n        })\r\n\r\n\r\n        //stop search button\r\n        document.querySelector('#force-stop').addEventListener(\"click\", () => {\r\n            clearInterval(checkForFormPushData)\r\n            console.log('stop search')\r\n            APILogBuffer('stop search')\r\n        })\r\n\r\n        //start search button\r\n        document.querySelector('#search-data').addEventListener(\"click\", () => {\r\n            triggerFormPushDataSearch();\r\n            console.log('start search')\r\n            APILogBuffer('start search')\r\n        })\r\n\r\n    },[]);\r\n\r\n    return(\r\n<>\r\n<div>\r\n\r\n\r\n   { /* init script below \r\n    <script id=\"jotform-api-script\" src=\"https://js.jotform.com/JotForm.js\"></script>\r\n    <script id=\"jotform-api-init\" defer>\r\n    window.JF.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \r\n    </script> \r\n\r\n    // TODO: import these scripts\r\n    <script src=\"./functions.js\">\r\n\r\n    </script>*/}\r\n\r\n    {/* CONTROL DASHBOARD */}\r\n\r\n    <button>\r\n    <a href=\"javascript:void( window.open( 'https://form.jotform.com/221101537081038', 'blank', 'scrollbars=yes, toolbar=no, width=700, height=500' ) ) \"> Send message </a>\r\n    </button>\r\n    \r\n    <button id='delete-submissions-btn'>\r\n    Delete all submissions\r\n    </button>\r\n    \r\n    <button id='get-user-info-btn'>\r\n    log usage info\r\n    </button>\r\n    \r\n\r\n    \r\n    <button id=\"force-stop\">\r\n    stop searching\r\n    </button>\r\n    <button id=\"search-data\">\r\n    start searching\r\n    </button>\r\n\r\n    <p>\r\n    <b>last push message: </b><span className='push-text'>Placeholder push text</span>\r\n    </p>\r\n    \r\n    <p>\r\n    <b>API status:</b><span className='api-status'></span>\r\n    </p>\r\n    \r\n    <div className='log-wrap'>\r\n    <b>API usage info log:</b><br/><pre className=\"log-info\"></pre>\r\n    </div>\r\n\r\n{/*\r\n    <figure className=\"border-1 i-block\">\r\n        <img src=\"./Usage_Info.png\" alt=\"API log information\" style={{width: \"700px\", maxWidth: \"100%\"}}/>\r\n        <figcaption className='mv-5' style={{textAlign: \"center\"}}>What the log results mean</figcaption>\r\n    </figure>\r\n*/}\r\n    \r\n\r\n    {/* // END CONTROL DASHBOARD */}\r\n    \r\n\r\n       \r\n\r\n</div>\r\n\r\n</>\r\n\r\n);\r\n\r\n\r\n}\r\nexport { OriginalUI }","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/uiContainer/ControlPanelUI.jsx",["108","109"],[],"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/global_Info.js",[],[],"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/pushExample/pushExample.jsx",["110","111","112","113"],[],"import React, {Suspense, useEffect} from 'react';\r\nimport {BlockHeader} from '../globalComponents/blockHeader.jsx';\r\nimport {popupElements,createAndAppendPopup,insertPush,popupElementsObject} from './functions.js';\r\nimport { triggerFormPushDataSearch } from '../global_functions.js';\r\nimport{APILogBuffer,fetchSubmissionResponses,handleExitOfLastPush} from '../global_functions';\r\nimport './pushExample.css';\r\nimport '../index.css'\r\nimport { globalInfo } from '../global_Info.js';\r\n\r\n\r\nfunction PushExample() {\r\n\r\n    //contains state/status information for this component \r\n    var state={\r\n        title: 'Push Notification Example',\r\n        popupCount: 0\r\n    }\r\n\r\n    useEffect(() => { \r\n            createAndAppendPopup();//create pop up (initally hide it)\r\n\r\n            //exit button click - hide push notificaiton and start searching for push data again\r\n            popupElementsObject.exitButton.addEventListener(\"click\", () => {\r\n                console.log(globalInfo);\r\n                debugger;\r\n                triggerFormPushDataSearch(); // start searching  for responses. NOTE this updates the ResponseArrayIndex\r\n                popupElementsObject.popUpContainer.style.visibility = 'hidden';\r\n\r\n                handleExitOfLastPush(); // show stop btn on last push \r\n\r\n                APILogBuffer('start search'); //populate API status\r\n\r\n                //hide placeholder text in push notification example\r\n                if(state.popupCount < 1) { document.querySelector('.notif-ph').innerHTML = ''; }\r\n                state.popupCount++; //tracks number of times popup has appeared\r\n            })\r\n            \r\n    })\r\n  \r\n    return (\r\n    <>\r\n        <div className=\"popup ui outer container p-20\">\r\n            <BlockHeader title={state.title}/>\r\n            <span class='t-center notif-ph'>No Notification Yet Recieved</span>\r\n        </div>\r\n    </>\r\n    );\r\n  }\r\n\r\n  export {PushExample}","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/usageLog/usageLog.jsx",["114","115","116"],[],"import React, {Suspense, useEffect,useState} from 'react';\r\nimport {BlockHeader} from '../globalComponents/blockHeader.jsx';\r\nimport {globalInfo} from '../global_Info.js';\r\nimport './usageLog.css';\r\nimport '../index.css';\r\n\r\nfunction UsageLog() {\r\n\r\n    //log is inserted as an iframe (theres bugs when using this codes original API)\r\n    //every time the refresh btn is clicked, a ticker is ++\r\n    //this remountsthe component and so updates the log\r\n\r\n    var state = {\r\n        title: 'API Usage Log'\r\n    }\r\n\r\n    //a simple tick state used to remount the component\r\n    var [count,RerenderThis] = useState(1);\r\n\r\n    useEffect(() => { \r\n        //re-mount the iframe to show the most update log stats\r\n        var iframe = document.querySelector('iframe');\r\n        globalInfo.usageLogSrc = globalInfo.usageLogSrc\r\n        setTimeout( () => iframe.setAttribute('src',globalInfo.usageLogSrc) );\r\n    });\r\n  \r\n    return (\r\n    <>\r\n        <div className=\"usagelog ui outer container p-20\">\r\n            <BlockHeader title={state.title}/>\r\n            \r\n            <div className='log-wrap'>\r\n                <div \r\n                className=\"usagelog refresh btn icon\"\r\n                onClick={() => { RerenderThis(count+1); console.log('tick')}}>\r\n                </div>\r\n                <iframe></iframe>\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n  }\r\n\r\n  export {UsageLog}","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/submitDeleteMessages/submitDeleteMessages.jsx",["117","118","119","120","121"],[],"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/apiStatus/apiStatus.jsx",["122","123","124","125","126"],[],"import React, {Suspense, useEffect} from 'react';\r\nimport {BlockHeader} from '../globalComponents/blockHeader.jsx';\r\nimport {globalInfo} from '../global_Info.js';\r\nimport {APILogBuffer,triggerFormPushDataSearch,checkForFormPushData,handleExitOfLastPush,getFormData} from '../global_functions.js';\r\nimport { disableBtn,enableBtn,triggerHandleBtnAbility} from './functions.js';\r\nimport './apiStatus.css';\r\nimport '../index.css';\r\n\r\n\r\nfunction Apistatus() {\r\n\r\n    var state = {\r\n        title: 'API Testing'\r\n    }\r\n\r\n    // START SEARCH - checks API constantly for submissions (push notifcations)\r\n    function startSearchingForPushData(e){\r\n        console.log('logging global info from start searching..')\r\n        console.log(globalInfo);\r\n\r\n        disableBtn(e); // disable start search btn\r\n\r\n        //getFormData(); // check API for more push responses\r\n        //handleExitOfLastPush()  // if no more push notifcations, show \"stop searching\"\r\n\r\n        triggerFormPushDataSearch(); //start searching for form data\r\n\r\n        //handleExitOfLastPush()  // if no more push notifcations, show \"stop searching\"\r\n\r\n\r\n        APILogBuffer('search for notifcations commenced'); //populate API status\r\n\r\n        triggerHandleBtnAbility();\r\n    }\r\n\r\n    // STOP SEARCH - stops searching the API \r\n    //(effectively halting push notifications, for control panel only NOT users)\r\n    function stopSearchingForPushData(e){\r\n        disableBtn(e); //disable stop search btn\r\n        globalInfo.buttonStart.classList.remove('disabled-btn'); //enable start search btn\r\n        clearInterval(checkForFormPushData); //stop searching for form data\r\n        APILogBuffer('search for notifcations ceased.'); //populate API status\r\n        //handleButtonAbility()\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className=\"api-status ui outer container p-20\">\r\n\r\n            <BlockHeader title={state.title}/>\r\n\r\n            <p>\r\n                <span className='push-text'><b>Last push notification:</b></span>\r\n                <pre className='pre-inline' style={{overflow: 'hidden'}}>No message yet recieved</pre>\r\n            </p>\r\n\r\n            <p>\r\n                <span className='api-status'><b>API Status:</b><pre class='pre-inline'>API Has not been activated yet.</pre></span>\r\n            </p>\r\n\r\n            <div class=\"api-status btn-wrap\">\r\n                <button class=\"api-status btn stop disabled-btn\" id=\"force-stop\"\r\n                onClick={(e) => stopSearchingForPushData(e)}>\r\n                Stop searching\r\n                </button>\r\n                <button class=\"api-status btn btn-secondary start\" id=\"search-data\"\r\n                onClick={(e) => {startSearchingForPushData(e)}}>\r\n                Start searching\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n    );\r\n  }\r\n\r\n  export {Apistatus}","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/global_functions.js",["127","128","129","130","131","132","133"],[],"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/submitDeleteMessages/functions.js",["134","135"],[],"import {globalInfo} from '../global_Info.js';\r\nimport{APILogBuffer,fetchSubmissionResponses} from '../global_functions';\r\n\r\nfunction deleteAllPushSubmissions(){\r\n\r\n    //DELETE ALL SUBMISSIONS\r\n    function deleteSubmissionResponses(){\r\n    //forEach form submission response, delete the data\r\n    //after this has been run, it will be as if a new form was created (no data)\r\n\r\n        //forEach over all form responses (push notifcations)\r\n        for(var i = 0; i < globalInfo.submissionResponses.length; i++){\r\n\r\n            //via the id, for each response delete the response submission\r\n            window.JF.deleteSubmission(globalInfo.submissionResponses[i].id, function(response){\r\n                /**\r\n                 successful response including a text message\r\n                .\r\n                */\r\n            })\r\n        }\r\n    }\r\n\r\n    //execute delete script (ensure API ok and submissions fetched uptodate)\r\n    function executeDeleteSubmissionResponses(){\r\n\r\n        //when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\r\n        var whenAPILoaded = '';\r\n        whenAPILoaded = setInterval( () => {\r\n\r\n            if(window.JF != ''){\r\n                //fetch submission responses\r\n                fetchSubmissionResponses();\r\n\r\n                //when API has retieved submission responses, run delete submission responses function\r\n                var checkSubmissionsResponse = '';\r\n                checkSubmissionsResponse = setInterval ( () => {\r\n                    if(globalInfo.submissionResponses != '') {\r\n                        deleteSubmissionResponses() \r\n                        clearInterval(checkSubmissionsResponse);\r\n                    }\r\n                },100)\r\n            }\r\n\r\n            clearInterval(whenAPILoaded); //stop checking if API has loaded\r\n            APILogBuffer('all submissions have been deleted.'); //populate API status\r\n        },500);\r\n    }\r\n    executeDeleteSubmissionResponses();\r\n}\r\n\r\nexport{ deleteAllPushSubmissions }","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/pushExample/functions.js",[],[],"/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/apiStatus/functions.js",["136","137","138","139"],[],"import {globalInfo} from '../global_Info.js';\r\n\r\n//add classList .disabled-btn\r\nfunction disableBtn(e){\r\n    e.target.classList.add('disabled-btn');\r\n}\r\n\r\n//remove classList .disabled-btn\r\nfunction enableBtn(e){\r\n    e.target.classList.remove('disabled-btn');\r\n}\r\n\r\n//***** \r\n// ALL FUNCTIONS RELATED TO DISABLING ENABLING BTNS\r\n\r\n//check if push is there\r\n\r\n//check if push available, if so run handBtnAbility (function that after 3 seconds..)\r\nfunction triggerHandleBtnAbility(){\r\n    debugger;\r\n    //check that the push/globalInfo and API has been configured\r\n    var checkForExitBtn = setInterval(() => {     \r\n        debugger;       \r\n        console.log('checking if API and pussh is configured');\r\n        if(globalInfo.firstCallHasBeenMade === true && window.JF /*&& globalInfo.submissionResponses != ''*/){\r\n            \r\n            debugger;\r\n\r\n            clearInterval(checkForExitBtn);\r\n            //handleBtnAbility();\r\n        }\r\n    }, 200);\r\n}\r\n\r\n//BELOW CODE CURRENTLY REDUNDANT\r\n//***************************************************/\r\n\r\nvar checkSeenNotificationsInterval = '';\r\nfunction handleBtnAbility(){\r\ndebugger;\r\n    //if there are responses\r\n    //TO DO: fix this part\r\n    if(globalInfo.submissionResponses.length > 1){\r\n        // checkSeenNotificationsInterval = setInterval(() => {\r\n            \r\n        // }, 200);\r\n        console.log('response greater than 1');\r\n        handleNoNotificationsRemainding(true);\r\n    }\r\n    //if there are no responses,\r\n    else if(globalInfo.submissionResponses.length < 1 || globalInfo.submissionResponses == '' ){\r\n        handleNoNotificationsRemainding(false);\r\n    }\r\n\r\n}\r\n\r\n// 1. when no more notifcations are avaialble\r\nvar timerToCheckIfNoNotifications = '';\r\nfunction handleNoNotificationsRemainding(responseType){\r\n    debugger;\r\n    //false = no responses remainding\r\n    //true = responses remainding\r\n\r\n    //if no more notifcations, enable \"top searching\" button\r\n        //to enable the user to stop the API from searching for a notification\r\n    if(responseType === false){\r\n        //stop search enabled\r\n        globalInfo.buttonStop.classList.remove('disabled-btn');\r\n        console.log(globalInfo.buttonStop);\r\n    }\r\n\r\n    //if response == true and and push is hidden?\r\n}\r\n\r\n\r\n//********************************************************** */\r\n\r\n//when popup is containing the last notifications\r\n// handleLastNotification(){\r\n//     //\r\n// }\r\n\r\n\r\n// 1.\r\n//if their are responses\r\n    //setinterval to check for...\r\n    //when responseArrayIndex is one less than submissionResponses (because latter doesnt count from 0)\r\n        //add event listener to exit button which runs handleNoNotificationsRemainding(e)\r\n        //said event listener has remove event listener for when its clicked\r\n//if no responses\r\n    //handleNoNotificationsRemainding(e) //which enables stops button\r\n\r\n\r\n// - 'start search' clicked !DONE!\r\n//     - 'start search' btn disabled !DONE!\r\n// - check if push aviable !DONE!\r\n// - x clicked (event listener for x)\r\n//    1. - after 3 seconds ie: no more pushes to be shown\r\n//         - if push.style.visisibility == hidden \r\n//             - \"stop search btn\" enabled\r\n//                 - if \"stop search btn\" clicked\r\n//                     - disable stop search\r\n//                     - enable start search\r\n//             - clear this timeout\r\n//             - add string 'no new messages' to push placeholder\r\n            \r\n\r\n// - 2. when the exit button is clicked and 3 second code starts\r\n// - if the pop up comes back, destroy the 3 second code\r\n//     - setinterval of 100ms checking if visisibility of popup\r\n//     - if its visisble, destroy 3 second code\r\n//     - otherwise clear this interval once the 3 seconds timeout code has been ran\r\n\r\n// 1.\r\n//if their are responses\r\n    //setinterval to check for...\r\n    //when responseArrayIndex is one less than submissionResponses (because latter doesnt count from 0)\r\n        //add event listener to exit button which runs handleNoNotificationsRemainding(e)\r\n        //said event listener has remove event listener for when its clicked\r\n//if no responses\r\n    //handleNoNotificationsRemainding(e) //which enables stops button\r\n\r\n// 2. SHOULDNT NEED\r\n//if globalInfo submission responses and globalArrayIndex are default\r\n    //handleNoNotificationsRemainding()\r\n    //TODO: note:handleyes will keep running\r\n//otherwise be on standby to be destroyed by handleYesNotificationsActive \r\n//NOTE:\r\n//need code to handle if a notification comes in while its searching\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport{disableBtn,enableBtn,triggerHandleBtnAbility}","/Users/joshmcintosh/Documents/Web_Development/Personal_Projects/push-ui-v1/my-app/src/designed_ui/globalComponents/blockHeader.jsx",["140"],[],"import React, {Suspense, useEffect} from 'react';\r\nimport './blockHeader.css';\r\nimport '../index.css';\r\n\r\nfunction BlockHeader(props) {\r\n\r\n    useEffect(() => { \r\n\r\n    })\r\n  \r\n    return (\r\n    <>\r\n        <div className=\"block-header ui container\">\r\n            {/* <div>{props.icon}</div> */}\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    </>\r\n    );\r\n  }\r\n\r\n  export {BlockHeader}",{"ruleId":"141","severity":1,"message":"142","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":14},{"ruleId":"141","severity":1,"message":"145","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"146","line":2,"column":16,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},{"ruleId":"141","severity":1,"message":"146","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"147","line":1,"column":26,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"148","line":1,"column":36,"nodeType":"143","messageId":"144","endLine":1,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":21,"column":29,"nodeType":"151","messageId":"152","endLine":21,"endColumn":69,"fix":"153"},{"ruleId":"154","severity":1,"message":"155","line":9,"column":9,"nodeType":"156","messageId":"157","endLine":10,"endColumn":42},{"ruleId":"141","severity":1,"message":"158","line":14,"column":13,"nodeType":"143","messageId":"144","endLine":14,"endColumn":27},{"ruleId":"141","severity":1,"message":"159","line":24,"column":18,"nodeType":"143","messageId":"144","endLine":24,"endColumn":41},{"ruleId":"141","severity":1,"message":"160","line":30,"column":18,"nodeType":"143","messageId":"144","endLine":30,"endColumn":35},{"ruleId":"141","severity":1,"message":"161","line":40,"column":18,"nodeType":"143","messageId":"144","endLine":40,"endColumn":28},{"ruleId":"141","severity":1,"message":"162","line":93,"column":17,"nodeType":"143","messageId":"144","endLine":93,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":151,"column":30,"nodeType":"165","messageId":"166","endLine":151,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":159,"column":48,"nodeType":"165","messageId":"166","endLine":159,"endColumn":50},{"ruleId":"141","severity":1,"message":"167","line":191,"column":13,"nodeType":"143","messageId":"144","endLine":191,"endColumn":41},{"ruleId":"163","severity":1,"message":"164","line":242,"column":82,"nodeType":"165","messageId":"166","endLine":242,"endColumn":84},{"ruleId":"163","severity":1,"message":"164","line":258,"column":213,"nodeType":"165","messageId":"166","endLine":258,"endColumn":215},{"ruleId":"168","severity":1,"message":"169","line":264,"column":25,"nodeType":"143","messageId":"170","endLine":264,"endColumn":37},{"ruleId":"171","severity":1,"message":"172","line":389,"column":5,"nodeType":"151","endLine":389,"endColumn":155},{"ruleId":"173","severity":1,"message":"174","line":389,"column":13,"nodeType":"175","messageId":"176","endLine":389,"endColumn":154},{"ruleId":"141","severity":1,"message":"146","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"147","line":1,"column":26,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"146","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"177","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":22},{"ruleId":"141","severity":1,"message":"178","line":3,"column":44,"nodeType":"143","messageId":"144","endLine":3,"endColumn":54},{"ruleId":"141","severity":1,"message":"179","line":5,"column":21,"nodeType":"143","messageId":"144","endLine":5,"endColumn":45},{"ruleId":"141","severity":1,"message":"146","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":23,"column":34,"nodeType":"182","messageId":"183","endLine":23,"endColumn":56},{"ruleId":"184","severity":1,"message":"185","line":37,"column":17,"nodeType":"151","endLine":37,"endColumn":25},{"ruleId":"141","severity":1,"message":"146","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"147","line":1,"column":26,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"186","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":28,"column":21,"nodeType":"151","endLine":28,"endColumn":175},{"ruleId":"173","severity":1,"message":"174","line":28,"column":29,"nodeType":"175","messageId":"176","endLine":28,"endColumn":174},{"ruleId":"141","severity":1,"message":"146","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"147","line":1,"column":26,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"187","line":4,"column":69,"nodeType":"143","messageId":"144","endLine":4,"endColumn":89},{"ruleId":"141","severity":1,"message":"188","line":4,"column":90,"nodeType":"143","messageId":"144","endLine":4,"endColumn":101},{"ruleId":"141","severity":1,"message":"189","line":5,"column":21,"nodeType":"143","messageId":"144","endLine":5,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":28,"column":50,"nodeType":"192","messageId":"193","endLine":28,"endColumn":58,"fix":"194"},{"ruleId":"190","severity":1,"message":"191","line":74,"column":44,"nodeType":"192","messageId":"193","endLine":74,"endColumn":52,"fix":"195"},{"ruleId":"163","severity":1,"message":"164","line":76,"column":96,"nodeType":"165","messageId":"166","endLine":76,"endColumn":98},{"ruleId":"163","severity":1,"message":"164","line":95,"column":182,"nodeType":"165","messageId":"166","endLine":95,"endColumn":184},{"ruleId":"168","severity":1,"message":"169","line":100,"column":17,"nodeType":"143","messageId":"170","endLine":100,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":110,"column":68,"nodeType":"165","messageId":"166","endLine":110,"endColumn":70},{"ruleId":"190","severity":1,"message":"191","line":111,"column":25,"nodeType":"192","messageId":"193","endLine":111,"endColumn":33,"fix":"196"},{"ruleId":"163","severity":1,"message":"164","line":31,"column":26,"nodeType":"165","messageId":"166","endLine":31,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":38,"column":55,"nodeType":"165","messageId":"166","endLine":38,"endColumn":57},{"ruleId":"141","severity":1,"message":"197","line":38,"column":5,"nodeType":"143","messageId":"144","endLine":38,"endColumn":35},{"ruleId":"141","severity":1,"message":"198","line":39,"column":10,"nodeType":"143","messageId":"144","endLine":39,"endColumn":26},{"ruleId":"163","severity":1,"message":"199","line":51,"column":89,"nodeType":"165","messageId":"166","endLine":51,"endColumn":91},{"ruleId":"141","severity":1,"message":"200","line":58,"column":5,"nodeType":"143","messageId":"144","endLine":58,"endColumn":34},{"ruleId":"141","severity":1,"message":"146","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Suspense' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"201","text":"202"},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'jotformApiInit' is assigned a value but never used.","'deletePreviousAPIScript' is defined but never used.","'reinjectAPIScript' is defined but never used.","'initScript' is defined but never used.","'apiKey' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'lastSubmissionResponseLength' is assigned a value but never used.","no-redeclare","'pushResponse' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'popupElements' is defined but never used.","'insertPush' is defined but never used.","'fetchSubmissionResponses' is defined but never used.","no-self-assign","'globalInfo.usageLogSrc' is assigned to itself.","MemberExpression","selfAssignment","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'globalInfo' is defined but never used.","'handleExitOfLastPush' is defined but never used.","'getFormData' is defined but never used.","'enableBtn' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"203","text":"204"},{"range":"205","text":"204"},{"range":"206","text":"204"},"'checkSeenNotificationsInterval' is assigned a value but never used.","'handleBtnAbility' is defined but never used.","Expected '===' and instead saw '=='.","'timerToCheckIfNoNotifications' is assigned a value but never used.",[544,544]," rel=\"noreferrer\"",[948,948],"()",[3119,3119],[5371,5371]]