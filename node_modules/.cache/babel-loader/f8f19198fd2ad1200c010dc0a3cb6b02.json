{"ast":null,"code":"import { globalInfo } from './global_Info.js';\nimport { insertPush } from './pushExample/functions';\n\n//takes a string and injects it into the API status after 2 seconds\nfunction APILogBuffer(log) {\n  //after 10s, return the string (log)\n  setTimeout(() => globalInfo.APIStatus.innerHTML = log, 2000);\n}\n\n//fetch all submission data into an array from the API\n_c = APILogBuffer;\nfunction fetchSubmissionResponses() {\n  window.JF.getFormSubmissions(globalInfo.formID, function (response) {\n    //add all responses to globalInfo so accesible globally\n    globalInfo.submissionResponses = response;\n  });\n}\n\n//get form data function\nfunction getFormData() {\n  APILogBuffer('getting form data');\n\n  //make request to API to recieve push notification\n  window.JF.getFormSubmissions(globalInfo.formID, function (response) {\n    APILogBuffer('recieved form submission data');\n\n    //if there are form submissions, store the submissions in global info as appropriate values\n    if (response.length >= 1) {\n      // assign reponse to globalInfo appriate value\n      globalInfo.submissionResponses = response;\n      //reverse submissionResponse so the latest push is always at the end of the array\n      globalInfo.submissionResponses.reverse();\n    }\n    //if no form submisions yet, update status log with relevant info\n    else {\n      APILogBuffer('no responses recieved yet');\n    }\n  });\n}\n\n//TODO: was upto line 67\n\n//trigger the setInterval to check for form push data\nvar checkForFormPushData = '';\nfunction triggerFormPushDataSearch() {\n  console.log('get triggerformpushdata globalinfo ');\n  console.log(globalInfo);\n  debugger;\n  //check every second for a new post\n  checkForFormPushData = setInterval(() => {\n    debugger;\n    console.log('get form data function');\n    getFormData();\n    console.log('form data has been recieved. Logging gobal info');\n    console.log(globalInfo);\n    //if this is the first time push is being activated\n    if (globalInfo.submissionResponseArrayIndex === false && globalInfo.submissionResponses != '') {\n      var pushResponse = globalInfo.submissionResponses[0].answers[globalInfo.responseAnswerNumber];\n      console.log('the new submission is' + globalInfo.submissionResponses);\n      //end push response to insertPush function, which will handle push response to screen\n      insertPush(pushResponse.answer);\n      //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\n      globalInfo.submissionResponseArrayIndex = 0;\n\n      //stop interval once push is up\n      stopFormApi();\n      globalInfo.lastSubmissionResponseLength = globalInfo.submissionResponses.length;\n    }\n    //else if this is not the first time the push has been activated\n    //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\n    //if so, send next push\n    else if (globalInfo.submissionResponseArrayIndex >= 0 && /* submissionResponseArrayIndex <= submissionResponses.length &&*/globalInfo.submissionResponseArrayIndex < globalInfo.submissionResponses.length - 1 && globalInfo.submissionResponses != '') {\n      globalInfo.lastSubmissionResponseLength++;\n      globalInfo.submissionResponseArrayIndex++;\n      console.log('number of data in index is ' + globalInfo.submissionResponseArrayIndex + ' and data in actual array is' + globalInfo.submissionResponses.length);\n\n      //pushResponse becomes the answer for the latest submission\n      var pushResponse = globalInfo.submissionResponses[globalInfo.submissionResponseArrayIndex].answers[globalInfo.responseAnswerNumber];\n\n      //end push response to insertPush function, which will handle push response to screen\n      insertPush(pushResponse.answer);\n\n      //stop interval once push is up\n      stopFormApi();\n    }\n  }, globalInfo.dataRefreshTime);\n}\n\n//stop searching for push data function\nfunction stopFormApi() {\n  /* setTimeout( () => { */\n  console.log('API has stopped');\n  APILogBuffer('API has stopped');\n  clearInterval(checkForFormPushData);\n  /* },5000) */\n}\n\nexport { APILogBuffer, fetchSubmissionResponses, triggerFormPushDataSearch, checkForFormPushData };\n\n/****************************************************** \r\n I THINK BELOW CAN BE DELETED \r\n ******************************************************/\n\n// var jotformApiScript = document.querySelector('#jotform-api-script');\n// var jotformApiInit = document.querySelector('#jotform-api-init');\n\n// var body = document.querySelector('body')\n// var apiScriptSrc; //used to retrieve API URL prior to removing from DOM\n\n// //initialise the script\n// function initScript(API){\n//     API.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \n//  }\n\n// //delete script tag with jotform API URL\n// function deletePreviousAPIScript(APIscript){\n//     apiScriptSrc = jotformApiScript.src\n//     body.removeChild(APIscript)\n// }\n\n// //reinject the jotform URL inside a new script tag\n// function reinjectAPIScript(APIScript){\n//     //debugger;\n//     APIScript = document.createElement('script'); //create new script\n//     APIScript.src = apiScriptSrc\n//     body.appendChild(APIScript) \n\n//     jotformApiScript = APIScript; //assign API script variable to be new script variable\n// }\n\n//TODO: FInalise below code in log usage info button \n\n// deletePreviousAPIScript(jotformApiScript);\n\n// reinjectAPIScript(jotformApiScript);\n\n//initScript(JF)\n\n// JF.getUsage((response) => console.log(response));\nvar _c;\n$RefreshReg$(_c, \"APILogBuffer\");","map":{"version":3,"names":["globalInfo","insertPush","APILogBuffer","log","setTimeout","APIStatus","innerHTML","fetchSubmissionResponses","window","JF","getFormSubmissions","formID","response","submissionResponses","getFormData","length","reverse","checkForFormPushData","triggerFormPushDataSearch","console","setInterval","submissionResponseArrayIndex","pushResponse","answers","responseAnswerNumber","answer","stopFormApi","lastSubmissionResponseLength","dataRefreshTime","clearInterval"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/designed_ui/global_functions.js"],"sourcesContent":["import {globalInfo} from './global_Info.js';\r\nimport{insertPush} from './pushExample/functions';\r\n\r\n//takes a string and injects it into the API status after 2 seconds\r\nfunction APILogBuffer(log){\r\n    //after 10s, return the string (log)\r\n    setTimeout( () => globalInfo.APIStatus.innerHTML =  log,2000)\r\n}\r\n\r\n//fetch all submission data into an array from the API\r\nfunction fetchSubmissionResponses(){\r\n    window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n        //add all responses to globalInfo so accesible globally\r\n        globalInfo.submissionResponses = response;\r\n    })\r\n}\r\n\r\n//get form data function\r\nfunction getFormData() {\r\n\r\n    APILogBuffer('getting form data');\r\n    \r\n    //make request to API to recieve push notification\r\n    window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n\r\n        APILogBuffer('recieved form submission data');\r\n        \r\n        //if there are form submissions, store the submissions in global info as appropriate values\r\n        if(response.length >= 1){\r\n            // assign reponse to globalInfo appriate value\r\n            globalInfo.submissionResponses = response; \r\n            //reverse submissionResponse so the latest push is always at the end of the array\r\n            globalInfo.submissionResponses.reverse();  \r\n        }\r\n        //if no form submisions yet, update status log with relevant info\r\n        else{\r\n            APILogBuffer('no responses recieved yet')\r\n        }\r\n\r\n    })\r\n}\r\n\r\n//TODO: was upto line 67\r\n\r\n//trigger the setInterval to check for form push data\r\nvar checkForFormPushData = '';\r\nfunction triggerFormPushDataSearch(){\r\n    console.log('get triggerformpushdata globalinfo ');\r\n    console.log(globalInfo);\r\n    debugger;\r\n    //check every second for a new post\r\n    checkForFormPushData = setInterval( () => {\r\n        debugger;\r\n        console.log('get form data function');\r\n        getFormData();\r\n        console.log('form data has been recieved. Logging gobal info');\r\n        console.log(globalInfo);\r\n        //if this is the first time push is being activated\r\n        if(globalInfo.submissionResponseArrayIndex === false && globalInfo.submissionResponses != ''){\r\n            var pushResponse = globalInfo.submissionResponses[0].answers[globalInfo.responseAnswerNumber];\r\n            console.log('the new submission is' + globalInfo.submissionResponses)\r\n            //end push response to insertPush function, which will handle push response to screen\r\n            insertPush(pushResponse.answer)\r\n            //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\r\n            globalInfo.submissionResponseArrayIndex = 0;\r\n  \r\n            //stop interval once push is up\r\n            stopFormApi()\r\n            \r\n            globalInfo.lastSubmissionResponseLength = globalInfo.submissionResponses.length;\r\n        }\r\n        //else if this is not the first time the push has been activated\r\n        //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\r\n        //if so, send next push\r\n        else if (globalInfo.submissionResponseArrayIndex >= 0 && /* submissionResponseArrayIndex <= submissionResponses.length &&*/ globalInfo.submissionResponseArrayIndex < globalInfo.submissionResponses.length-1 && globalInfo.submissionResponses != ''){\r\n            globalInfo.lastSubmissionResponseLength++;\r\n            globalInfo.submissionResponseArrayIndex++;\r\n            console.log('number of data in index is ' + globalInfo.submissionResponseArrayIndex + ' and data in actual array is' + globalInfo.submissionResponses.length)\r\n            \r\n            //pushResponse becomes the answer for the latest submission\r\n            var pushResponse = globalInfo.submissionResponses[globalInfo.submissionResponseArrayIndex].answers[globalInfo.responseAnswerNumber];\r\n\r\n                //end push response to insertPush function, which will handle push response to screen\r\n            insertPush(pushResponse.answer);\r\n\r\n            //stop interval once push is up\r\n            stopFormApi()\r\n        }\r\n\r\n    },globalInfo.dataRefreshTime)\r\n}\r\n\r\n//stop searching for push data function\r\nfunction stopFormApi(){\r\n\r\n    /* setTimeout( () => { */\r\n            console.log('API has stopped');\r\n            APILogBuffer('API has stopped');\r\n            clearInterval(checkForFormPushData);\r\n    /* },5000) */\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nexport {APILogBuffer,fetchSubmissionResponses,triggerFormPushDataSearch,checkForFormPushData}\r\n\r\n\r\n\r\n/****************************************************** \r\n I THINK BELOW CAN BE DELETED \r\n ******************************************************/\r\n\r\n\r\n\r\n// var jotformApiScript = document.querySelector('#jotform-api-script');\r\n// var jotformApiInit = document.querySelector('#jotform-api-init');\r\n\r\n\r\n// var body = document.querySelector('body')\r\n// var apiScriptSrc; //used to retrieve API URL prior to removing from DOM\r\n\r\n\r\n// //initialise the script\r\n// function initScript(API){\r\n//     API.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \r\n//  }\r\n\r\n\r\n\r\n\r\n\r\n// //delete script tag with jotform API URL\r\n// function deletePreviousAPIScript(APIscript){\r\n//     apiScriptSrc = jotformApiScript.src\r\n//     body.removeChild(APIscript)\r\n// }\r\n\r\n// //reinject the jotform URL inside a new script tag\r\n// function reinjectAPIScript(APIScript){\r\n//     //debugger;\r\n//     APIScript = document.createElement('script'); //create new script\r\n//     APIScript.src = apiScriptSrc\r\n//     body.appendChild(APIScript) \r\n\r\n//     jotformApiScript = APIScript; //assign API script variable to be new script variable\r\n// }\r\n\r\n\r\n\r\n //TODO: FInalise below code in log usage info button \r\n\r\n// deletePreviousAPIScript(jotformApiScript);\r\n\r\n// reinjectAPIScript(jotformApiScript);\r\n \r\n //initScript(JF)\r\n\r\n// JF.getUsage((response) => console.log(response));"],"mappings":"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"},"metadata":{},"sourceType":"module"}