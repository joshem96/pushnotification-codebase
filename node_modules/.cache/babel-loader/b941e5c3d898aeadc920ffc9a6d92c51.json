{"ast":null,"code":"import { globalInfo } from './global_Info.js';\nimport { insertPush } from './pushExample/functions';\n\n//takes a string and injects it into the API status after 2 seconds\nfunction APILogBuffer(log) {\n  //after 10s, return the string (log)\n  setTimeout(() => globalInfo.APIStatus.innerHTML = log, 2000);\n}\n\n//fetch all submission data into an array from the API\n_c = APILogBuffer;\nfunction fetchSubmissionResponses() {\n  window.JF.getFormSubmissions(globalInfo.formID, function (response) {\n    //add all responses to globalInfo so accesible globally\n    globalInfo.submissionResponses = response;\n  });\n}\n\n//get form data function and store into globeInfo\nfunction getFormData() {\n  APILogBuffer('getting form data');\n\n  //make request to API to recieve push notification\n  window.JF.getFormSubmissions(globalInfo.formID, function (response) {\n    console.log('date of recieved fetch' + new Date());\n    APILogBuffer('recieved form submission data');\n    console.log(globalInfo);\n\n    //if there are form submissions, store the submissions in global info as appropriate values\n    if (response.length >= 1) {\n      // assign reponse to globalInfo appriate value\n      globalInfo.submissionResponses = response;\n      //reverse submissionResponse so the latest push is always at the end of the array\n      globalInfo.submissionResponses.reverse();\n    }\n    //if no form submisions yet, update status log with relevant info\n    else {\n      APILogBuffer('no responses recieved yet');\n      console.log(globalInfo);\n    }\n  });\n}\n\n//trigger the setInterval to check for form push data\nvar checkForFormPushData = '';\nfunction triggerFormPushDataSearch() {\n  //check every second for a new post\n  checkForFormPushData = setInterval(() => {\n    //get form data responses\n    getFormData();\n    console.log('date of init fetch' + new Date());\n    //if this is the first time push is being activated\n    if (globalInfo.submissionResponseArrayIndex === false && globalInfo.submissionResponses != '') {\n      //assign push response to variable\n      var pushResponse = globalInfo.submissionResponses[0].answers[globalInfo.responseAnswerNumber];\n\n      //insert newly recieved push response into push and display push (visa insertPush())\n      insertPush(pushResponse.answer);\n\n      //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\n      globalInfo.submissionResponseArrayIndex = 0;\n\n      //stop interval once push is up\n      stopFormApi();\n      globalInfo.lastSubmissionResponseLength = globalInfo.submissionResponses.length;\n    }\n    //else if this is not the first time the push has been activated\n    //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\n    //if so, send next push\n    else if (globalInfo.submissionResponseArrayIndex >= 0 && globalInfo.submissionResponseArrayIndex < globalInfo.submissionResponses.length - 1 && globalInfo.submissionResponses != '') {\n      globalInfo.lastSubmissionResponseLength++;\n      globalInfo.submissionResponseArrayIndex++;\n\n      //pushResponse becomes the answer for the latest submission\n      var pushResponse = globalInfo.submissionResponses[globalInfo.submissionResponseArrayIndex].answers[globalInfo.responseAnswerNumber];\n\n      //end push response to insertPush function, which will handle push response to screen\n      insertPush(pushResponse.answer);\n\n      //stop interval once push is up\n      stopFormApi();\n    }\n    //else if this is last push in array, show stop button\n    else if (globalInfo.submissionResponseArrayIndex === globalInfo.submissionResponses.length - 1) {\n      globalInfo.buttonStop.classList.remove('disabled-btn');\n      stopFormApi();\n    }\n  }, globalInfo.dataRefreshTime);\n}\n\n//stop searching for push data function\nfunction stopFormApi() {\n  APILogBuffer('API has stopped');\n  clearInterval(checkForFormPushData); // stop interval thats checking for form responses/data\n}\n\n//CHECK IF LAST PUSH IS THE LAST IN OF SUBMISSION RESPONSES\nfunction isCurrentPushLastPush() {\n  debugger;\n  console.log(globalInfo);\n  var result = globalInfo.submissionResponseArrayIndex === globalInfo.submissionResponses.length - 1 ? true : false;\n  return result;\n}\n//when user has no more notifcations remaining or none have been sent yet, show \"stop searching\" btn\n//is triggered on events like the \"exit button\" \nfunction handleExitOfLastPush() {\n  if (isCurrentPushLastPush() /*|| globalInfo.submissionResponses == \"\"*/) {\n    debugger;\n    globalInfo.buttonStop.classList.remove('disabled-btn');\n  }\n}\nexport { APILogBuffer, fetchSubmissionResponses, triggerFormPushDataSearch, checkForFormPushData, handleExitOfLastPush, getFormData };\nvar _c;\n$RefreshReg$(_c, \"APILogBuffer\");","map":{"version":3,"names":["globalInfo","insertPush","APILogBuffer","log","setTimeout","APIStatus","innerHTML","fetchSubmissionResponses","window","JF","getFormSubmissions","formID","response","submissionResponses","getFormData","console","Date","length","reverse","checkForFormPushData","triggerFormPushDataSearch","setInterval","submissionResponseArrayIndex","pushResponse","answers","responseAnswerNumber","answer","stopFormApi","lastSubmissionResponseLength","buttonStop","classList","remove","dataRefreshTime","clearInterval","isCurrentPushLastPush","result","handleExitOfLastPush"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/designed_ui/global_functions.js"],"sourcesContent":["import {globalInfo} from './global_Info.js';\r\nimport{insertPush} from './pushExample/functions';\r\n\r\n\r\n//takes a string and injects it into the API status after 2 seconds\r\nfunction APILogBuffer(log){\r\n    //after 10s, return the string (log)\r\n    setTimeout( () => globalInfo.APIStatus.innerHTML =  log,2000);\r\n}\r\n\r\n\r\n//fetch all submission data into an array from the API\r\nfunction fetchSubmissionResponses(){\r\n    window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n        //add all responses to globalInfo so accesible globally\r\n        globalInfo.submissionResponses = response;\r\n    });\r\n}\r\n\r\n\r\n//get form data function and store into globeInfo\r\nfunction getFormData() {\r\n\r\n    APILogBuffer('getting form data');\r\n    \r\n    //make request to API to recieve push notification\r\n    window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n        console.log('date of recieved fetch' + new Date);\r\n        APILogBuffer('recieved form submission data');\r\n        console.log(globalInfo)\r\n        \r\n        //if there are form submissions, store the submissions in global info as appropriate values\r\n        if(response.length >= 1){\r\n            // assign reponse to globalInfo appriate value\r\n            globalInfo.submissionResponses = response; \r\n            //reverse submissionResponse so the latest push is always at the end of the array\r\n            globalInfo.submissionResponses.reverse();  \r\n        }\r\n        //if no form submisions yet, update status log with relevant info\r\n        else{\r\n            APILogBuffer('no responses recieved yet');\r\n            console.log(globalInfo);\r\n        }\r\n\r\n    });\r\n}\r\n\r\n\r\n//trigger the setInterval to check for form push data\r\nvar checkForFormPushData = '';\r\nfunction triggerFormPushDataSearch(){\r\n\r\n    //check every second for a new post\r\n    checkForFormPushData = setInterval( () => {\r\n\r\n        //get form data responses\r\n        getFormData();\r\n        console.log('date of init fetch' + new Date)\r\n        //if this is the first time push is being activated\r\n        if(globalInfo.submissionResponseArrayIndex === false && globalInfo.submissionResponses != ''){\r\n            //assign push response to variable\r\n            var pushResponse = globalInfo.submissionResponses[0].answers[globalInfo.responseAnswerNumber];\r\n\r\n            //insert newly recieved push response into push and display push (visa insertPush())\r\n            insertPush(pushResponse.answer);\r\n\r\n            //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\r\n            globalInfo.submissionResponseArrayIndex = 0;\r\n  \r\n            //stop interval once push is up\r\n            stopFormApi();\r\n            \r\n            globalInfo.lastSubmissionResponseLength = globalInfo.submissionResponses.length;\r\n        }\r\n        //else if this is not the first time the push has been activated\r\n        //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\r\n        //if so, send next push\r\n        else if (globalInfo.submissionResponseArrayIndex >= 0 && globalInfo.submissionResponseArrayIndex < globalInfo.submissionResponses.length-1 && globalInfo.submissionResponses != ''){\r\n            globalInfo.lastSubmissionResponseLength++;\r\n            globalInfo.submissionResponseArrayIndex++;\r\n            \r\n            //pushResponse becomes the answer for the latest submission\r\n            var pushResponse = globalInfo.submissionResponses[globalInfo.submissionResponseArrayIndex].answers[globalInfo.responseAnswerNumber];\r\n\r\n            //end push response to insertPush function, which will handle push response to screen\r\n            insertPush(pushResponse.answer);\r\n\r\n            //stop interval once push is up\r\n            stopFormApi();\r\n        }\r\n        //else if this is last push in array, show stop button\r\n        else if (globalInfo.submissionResponseArrayIndex === globalInfo.submissionResponses.length-1){\r\n            globalInfo.buttonStop.classList.remove('disabled-btn');\r\n            stopFormApi();\r\n        }\r\n        \r\n\r\n    },globalInfo.dataRefreshTime)\r\n}\r\n\r\n\r\n//stop searching for push data function\r\nfunction stopFormApi(){\r\n    APILogBuffer('API has stopped');\r\n    clearInterval(checkForFormPushData); // stop interval thats checking for form responses/data\r\n}\r\n\r\n//CHECK IF LAST PUSH IS THE LAST IN OF SUBMISSION RESPONSES\r\nfunction isCurrentPushLastPush(){\r\n    debugger;\r\n    console.log(globalInfo);\r\n    var result = (globalInfo.submissionResponseArrayIndex === globalInfo.submissionResponses.length-1) ? true : false;\r\n    return result;\r\n}\r\n//when user has no more notifcations remaining or none have been sent yet, show \"stop searching\" btn\r\n//is triggered on events like the \"exit button\" \r\nfunction handleExitOfLastPush(){\r\n\r\n\r\n\r\n    if(isCurrentPushLastPush()/*|| globalInfo.submissionResponses == \"\"*/){\r\n        debugger;\r\n        globalInfo.buttonStop.classList.remove('disabled-btn');\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {APILogBuffer,fetchSubmissionResponses,triggerFormPushDataSearch,checkForFormPushData,handleExitOfLastPush,getFormData}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}