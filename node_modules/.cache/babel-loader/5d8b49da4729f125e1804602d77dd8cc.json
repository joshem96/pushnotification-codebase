{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Documents\\\\Code\\\\push-ui-v1\\\\my-app\\\\src\\\\original_ui\\\\OriginalUi.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OriginalUI() {\n  _s();\n  useEffect(() => {\n    {/* // /////////////////////////////////////\r\n     // LOG USER INFORMATION SCRIP */}\n    var infoLogText = document.querySelector('.log-info');\n    var jotformApiScript = document.querySelector('#jotform-api-script');\n    var jotformApiInit = document.querySelector('#jotform-api-init');\n    var body = document.querySelector('body');\n\n    //FUNCTIONS>JS\n    //..............................\n\n    var apiScriptSrc; //used to retrieve API URL prior to removing from DOM\n\n    //delete script tag with jotform API URL\n    function deletePreviousAPIScript(APIscript) {\n      apiScriptSrc = jotformApiScript.src;\n      body.removeChild(APIscript);\n    }\n\n    //reinject the jotform URL inside a new script tag\n    function reinjectAPIScript(APIScript) {\n      //debugger;\n      APIScript = document.createElement('script'); //create new script\n      APIScript.src = apiScriptSrc;\n      body.appendChild(APIScript);\n      jotformApiScript = APIScript; //assign API script variable to be new script variable\n    }\n\n    //initialise the script\n    function initScript(API) {\n      API.initialize({\n        apiKey: \"f78958f78beefa5e3e88255e7559579b\"\n      });\n    }\n\n    //....................................\n\n    function logUserInfo() {\n      //NOTE: for whatever reason, to get a fresh usage log the jotform API script needs to be reinserted on the page.\n      //otherwise JF.getUsage will spit out the same response as when the script was first ran\n\n      //deletePreviousAPIScript(jotformApiScript); //delete previous jotform script\n\n      // !note! this is currently not working, seems to be a bug\n      //reinjectAPIScript(jotformApiScript); //reinject previous jotform script\n\n      initScript(JF); //initialise jotform script\n\n      //inject log onto the page\n      JF.getUsage(function (response) {\n        //console.log(response);\n        infoLogText.innerHTML = JSON.stringify(response, null, 2);\n        //onsole.log(JSON.stringify(response,null,2))\n      });\n    }\n\n    document.querySelector('#get-user-info-btn').addEventListener('click', () => {\n      logUserInfo();\n    });\n\n    // END USER INFORMATION SCRIPT \n\n    // /////////////////////////////////////\n    // DELETE ALL SUBMISSIONS CODE BELOW\n\n    document.querySelector('#delete-submissions-btn').addEventListener('click', () => {\n      deleteAllPushSubmissions();\n    });\n    function deleteAllPushSubmissions() {\n      //DELTE ALL SUBMISSIONS\n      //************************************************\n\n      //global variables\n      //-----------------\n\n      //ENTER API KEY\n      var apiKey = \"f78958f78beefa5e3e88255e7559579b\";\n\n      //ENTER FORM ID (of form you want to delete submissions for)\n      var formID = '221101537081038';\n\n      //************************************************\n\n      //fetch all submissions and then all delete submissions\n      //-----------------\n\n      //takes a string and injects it into the API status after 2 seconds\n      function APILogBuffer(log) {\n        //after 10s, return the string (log)\n        setTimeout(() => {\n          APIStatus.innerHTML = '' + log;\n        }, 2000);\n      }\n      var submissionResponses = ''; //becomes array of all submission responses\n\n      //fetch all submission data into an array from the API\n      function fetchSubmissionResponses() {\n        JF.getFormSubmissions(formID, function (response) {\n          console.log('recieved form submission data');\n          submissionResponses = response;\n        });\n      }\n\n      //DELETE ALL SUBMISSIONS\n      function deleteSubmissionResponses() {\n        //forEach form submission response, delete the data\n        //after this has been run, it will be as if a new form was created (no data)\n\n        debugger;\n        for (var i = 0; i < submissionResponses.length; i++) {\n          debugger;\n          //via the id, for each response delete the response submission\n          JF.deleteSubmission(submissionResponses[i].id, function (response) {\n            debugger;\n            /**\r\n             successful response including a text message\r\n            .\r\n            */\n            console.log(` ${response}`);\n          });\n          //console.log(submissionResponses[i].id);\n        }\n      }\n\n      //when API has loaded (JF != ''), run the following scripts to execute the deletion of all form submissions\n      var whenAPILoaded = '';\n      whenAPILoaded = setInterval(() => {\n        if (JF != '') {\n          //fetch submission responses\n          fetchSubmissionResponses();\n\n          //when API has retieved submission responses, run delete submission responses function\n          var checkSubmissionsResponse = '';\n          checkSubmissionsResponse = setInterval(() => {\n            if (submissionResponses != '') {\n              deleteSubmissionResponses();\n              clearInterval(checkSubmissionsResponse);\n            }\n          }, 100);\n        }\n        clearInterval(whenAPILoaded);\n        console.log('delete from submissions script has been ran');\n        APILogBuffer(' delete all submissions script has been ran');\n      }, 500);\n    }\n\n    // Search for push messages and execute pop ups etc\n\n    // get all form responss\n    var submissionResponses = '';\n    //get text response\n    var p_pushText = document.querySelector('.push-text');\n    var APIStatus = document.querySelector('.api-status');\n    //number array text lives in\n    var responseAnswerNumber = 4;\n    //variale that is the current form submission index. eg [1] would be the second post\n    //False is init\n    var submissionResponseArrayIndex = false;\n    //amount of time between each form data check\n    var dataRefreshTime = 1000;\n    //previous responses array\n    var lastSubmissionResponseLength = '';\n    //api key\n\n    //form ID number\n    var formID = '221101537081038';\n\n    //takes a string and injects it into the API status after 2 seconds\n    function APILogBuffer(log) {\n      //after 10s, return the string (log)\n      setTimeout(() => {\n        APIStatus.innerHTML = ' ' + log;\n      }, 2000);\n    }\n\n    //get form data function\n    function getFormData() {\n      debugger;\n      console.log('getting form data');\n      APILogBuffer('getting form data');\n\n      //make request to API to recieve push notification\n      JF.getFormSubmissions(formID, function (response) {\n        debugger;\n        console.log('recieved form submission data');\n        APILogBuffer('recieved form submission data');\n\n        //if there are form submissions, store the submissions in the applicable variables\n        if (response.length >= 1) {\n          submissionResponses = response;\n          //reverse submissionResponse so the latest push is always at the end of the array\n          submissionResponses.reverse();\n        } else {\n          console.log('no responses recieved yet');\n          APILogBuffer('no responses recieved yet');\n        }\n      });\n    }\n    var checkForFormPushData = '';\n\n    //trigger the setInterval to check for form push data\n    function triggerFormPushDataSearch() {\n      debugger;\n      //check every second for a new post\n      checkForFormPushData = setInterval(() => {\n        debugger;\n        getFormData();\n        //if this is the first time push is being activated\n        if (submissionResponseArrayIndex === false && submissionResponses != '') {\n          var pushResponse = submissionResponses[0].answers[responseAnswerNumber];\n          console.log('the new submission is' + submissionResponses);\n          //end push response to insertPush function, which will handle push response to screen\n          insertPush(pushResponse.answer);\n          //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\n          submissionResponseArrayIndex = 0;\n\n          //stop interval once push is up\n          stopFormApi();\n          lastSubmissionResponseLength = submissionResponses.length;\n        }\n        //else if this is not the first time the push has been activated\n        //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\n        //if so, send next push\n        else if (submissionResponseArrayIndex >= 0 && /* submissionResponseArrayIndex <= submissionResponses.length &&*/submissionResponseArrayIndex < submissionResponses.length - 1 && submissionResponses != '') {\n          lastSubmissionResponseLength++;\n          submissionResponseArrayIndex++;\n          console.log('number of data in index is ' + submissionResponseArrayIndex + ' and data in actual array is' + submissionResponses.length);\n\n          //pushResponse becomes the answer for the latest submission\n          var pushResponse = submissionResponses[submissionResponseArrayIndex].answers[responseAnswerNumber];\n\n          //end push response to insertPush function, which will handle push response to screen\n          insertPush(pushResponse.answer);\n\n          //stop interval once push is up\n          stopFormApi();\n        }\n      }, dataRefreshTime);\n    }\n\n    //stop searching for push data function\n    function stopFormApi() {\n      /* setTimeout( () => { */\n      console.log('API has stopped');\n      APILogBuffer('API has stopped');\n      clearInterval(checkForFormPushData);\n      /* },5000) */\n    }\n\n    //*********************************************************************************\n\n    //CREATE ELEMENT FUNCTION\n    var popUpContainer = '';\n    var popUpText = '';\n    var popUpTextWrap = '';\n    var exitButton = '';\n    function createAndAppendPopup(pushText) {\n      //create HTML elements (div wrapper and p text)\n      popUpContainer = document.createElement('div');\n      popUpContainer.classNameList.add('popup-container');\n      popUpTextWrap = document.createElement('div');\n      popUpTextWrap.classNameList.add('popup-text-wrap');\n      popUpText = document.createElement('p');\n      popUpText.classNameList.add('popup-text');\n      popUpText.innerHTML = 'placeholder';\n      exitButton = document.createElement('span');\n      exitButton.classNameList.add('popup-exit-button');\n      exitButton.innerHTML = 'X';\n\n      //set initial styles\n      popUpContainer.style = 'display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 300px; height: 220px; background: #884ED5; color: black; z-index: 100; font-family: inherit; justify-content: flex-start; overflow: auto; flex-direction: column; border-radius: 8px;';\n      popUpTextWrap.style = 'display: flex; justify-content: center; align-items: center; flex-grow: 1';\n      popUpText.style = 'font-size: 20px; text-align: center; padding: 0px 15px; margin-top: 0px;';\n      exitButton.style = 'margin-right: 10px; margin-top: 5px; font-size: 25px; font-weight: bold; cursor: pointer; text-align: right';\n\n      //append pop up container\n      document.querySelector('body').appendChild(popUpContainer);\n\n      //append popup text and exit button\n      document.querySelector('body').appendChild(popUpContainer);\n      [exitButton, popUpTextWrap].forEach(element => {\n        popUpContainer.appendChild(element);\n      });\n      popUpTextWrap.appendChild(popUpText);\n    }\n    createAndAppendPopup(); //create pop up\n\n    //insert push. use P for now\n    function insertPush(pushText) {\n      p_pushText.innerHTML = pushText;\n\n      //when push arrives, display push and insert push text\n      popUpContainer.style.display = 'flex';\n      popUpText.innerHTML = pushText;\n      //pushText.innerHTML = pushtext\n    }\n\n    //exit button click - hide push notificaiton and start searching for push data aain\n    exitButton.addEventListener(\"click\", () => {\n      triggerFormPushDataSearch();\n      popUpContainer.style.display = 'none';\n      console.log('start search');\n      APILogBuffer('start search');\n    });\n\n    //stop search button\n    document.querySelector('#force-stop').addEventListener(\"click\", () => {\n      clearInterval(checkForFormPushData);\n      console.log('stop search');\n      APILogBuffer('stop search');\n    });\n\n    //start search button\n    document.querySelector('#search-data').addEventListener(\"click\", () => {\n      triggerFormPushDataSearch();\n      console.log('start search');\n      APILogBuffer('start search');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:void( window.open( 'https://form.jotform.com/221101537081038', 'blank', 'scrollbars=yes, toolbar=no, width=700, height=500' ) ) \",\n          children: \" Send message \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete-submissions-btn\",\n        children: \"Delete all submissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"get-user-info-btn\",\n        children: \"log usage info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"force-stop\",\n        children: \"stop searching\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-data\",\n        children: \"start searching\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"last push message: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"push-text\",\n          children: \"Placeholder push text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"API status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"api-status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"log-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"API usage info log:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"log-info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"border-1 i-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./Usage_Info.png\",\n          alt: \"API log information\",\n          style: \"width: 700px; max-width: 100%;\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n          className: \"mv-5\",\n          style: \"text-align: center;\",\n          children: \"What the log results mean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(OriginalUI, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = OriginalUI;\nexport { OriginalUI };\nvar _c;\n$RefreshReg$(_c, \"OriginalUI\");","map":{"version":3,"names":["useEffect","OriginalUI","infoLogText","document","querySelector","jotformApiScript","jotformApiInit","body","apiScriptSrc","deletePreviousAPIScript","APIscript","src","removeChild","reinjectAPIScript","APIScript","createElement","appendChild","initScript","API","initialize","apiKey","logUserInfo","JF","getUsage","response","innerHTML","JSON","stringify","addEventListener","deleteAllPushSubmissions","formID","APILogBuffer","log","setTimeout","APIStatus","submissionResponses","fetchSubmissionResponses","getFormSubmissions","console","deleteSubmissionResponses","i","length","deleteSubmission","id","whenAPILoaded","setInterval","checkSubmissionsResponse","clearInterval","p_pushText","responseAnswerNumber","submissionResponseArrayIndex","dataRefreshTime","lastSubmissionResponseLength","getFormData","reverse","checkForFormPushData","triggerFormPushDataSearch","pushResponse","answers","insertPush","answer","stopFormApi","popUpContainer","popUpText","popUpTextWrap","exitButton","createAndAppendPopup","pushText","classNameList","add","style","forEach","element","display"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/original_ui/OriginalUi.jsx"],"sourcesContent":["\r\nimport { useEffect } from 'react';\r\nimport './index.css'\r\n\r\nfunction OriginalUI(){\r\n\r\n    useEffect(() => {\r\n\r\n        {/* // /////////////////////////////////////\r\n        // LOG USER INFORMATION SCRIP */}\r\n\r\n        var infoLogText = document.querySelector('.log-info')\r\n        var jotformApiScript = document.querySelector('#jotform-api-script');\r\n        var jotformApiInit = document.querySelector('#jotform-api-init')\r\n\r\n        var body = document.querySelector('body')\r\n\r\n        //FUNCTIONS>JS\r\n        //..............................\r\n\r\n        var apiScriptSrc; //used to retrieve API URL prior to removing from DOM\r\n\r\n        //delete script tag with jotform API URL\r\n        function deletePreviousAPIScript(APIscript){\r\n            apiScriptSrc = jotformApiScript.src\r\n            body.removeChild(APIscript)\r\n        }\r\n\r\n        //reinject the jotform URL inside a new script tag\r\n        function reinjectAPIScript(APIScript){\r\n            //debugger;\r\n            APIScript = document.createElement('script'); //create new script\r\n            APIScript.src = apiScriptSrc\r\n            body.appendChild(APIScript) \r\n\r\n            jotformApiScript = APIScript; //assign API script variable to be new script variable\r\n        }\r\n\r\n        //initialise the script\r\n        function initScript(API){\r\n            API.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \r\n\r\n        }\r\n\r\n        //....................................\r\n\r\n        function logUserInfo(){\r\n\r\n            //NOTE: for whatever reason, to get a fresh usage log the jotform API script needs to be reinserted on the page.\r\n            //otherwise JF.getUsage will spit out the same response as when the script was first ran\r\n\r\n            //deletePreviousAPIScript(jotformApiScript); //delete previous jotform script\r\n\r\n                // !note! this is currently not working, seems to be a bug\r\n            //reinjectAPIScript(jotformApiScript); //reinject previous jotform script\r\n\r\n            initScript(JF); //initialise jotform script\r\n\r\n            //inject log onto the page\r\n            JF.getUsage(function(response){\r\n                //console.log(response);\r\n                infoLogText.innerHTML = JSON.stringify(response,null,2)\r\n                //onsole.log(JSON.stringify(response,null,2))\r\n            });\r\n\r\n        }\r\n\r\n\r\n        document.querySelector('#get-user-info-btn').addEventListener('click', () => {\r\n            logUserInfo();\r\n        });\r\n\r\n    // END USER INFORMATION SCRIPT \r\n\r\n\r\n    // /////////////////////////////////////\r\n    // DELETE ALL SUBMISSIONS CODE BELOW\r\n\r\n\r\n        document.querySelector('#delete-submissions-btn').addEventListener('click', () => {\r\n            deleteAllPushSubmissions();\r\n        });\r\n        \r\n        function deleteAllPushSubmissions(){\r\n            \r\n            //DELTE ALL SUBMISSIONS\r\n            //************************************************\r\n\r\n            //global variables\r\n            //-----------------\r\n\r\n            //ENTER API KEY\r\n            var apiKey = \"f78958f78beefa5e3e88255e7559579b\"\r\n\r\n            //ENTER FORM ID (of form you want to delete submissions for)\r\n            var formID = '221101537081038'\r\n\r\n\r\n            //************************************************\r\n\r\n            //fetch all submissions and then all delete submissions\r\n            //-----------------\r\n\r\n            //takes a string and injects it into the API status after 2 seconds\r\n            function APILogBuffer(log){\r\n                //after 10s, return the string (log)\r\n                setTimeout( () => {\r\n                    APIStatus.innerHTML =  ''+ log;\r\n                },2000)\r\n            }\r\n\r\n            var submissionResponses = '' //becomes array of all submission responses\r\n\r\n            //fetch all submission data into an array from the API\r\n            function fetchSubmissionResponses(){\r\n\r\n                JF.getFormSubmissions(formID, function(response){\r\n                    console.log('recieved form submission data')\r\n\r\n                    submissionResponses = response;\r\n\r\n                })\r\n            }\r\n\r\n            //DELETE ALL SUBMISSIONS\r\n            function deleteSubmissionResponses(){\r\n            //forEach form submission response, delete the data\r\n            //after this has been run, it will be as if a new form was created (no data)\r\n\r\n                debugger;\r\n                for(var i = 0; i < submissionResponses.length; i++){\r\n                debugger;\r\n                    //via the id, for each response delete the response submission\r\n                    JF.deleteSubmission(submissionResponses[i].id, function(response){\r\n                    debugger;\r\n                        /**\r\n                         successful response including a text message\r\n                        .\r\n                        */\r\n                        console.log(` ${response}`);\r\n                    })\r\n                    //console.log(submissionResponses[i].id);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            //when API has loaded (JF != ''), run the following scripts to execute the deletion of all form submissions\r\n            var whenAPILoaded = '';\r\n            whenAPILoaded = setInterval( () => {\r\n                if(JF != ''){\r\n\r\n                    //fetch submission responses\r\n                    fetchSubmissionResponses();\r\n\r\n                    //when API has retieved submission responses, run delete submission responses function\r\n                    var checkSubmissionsResponse = '';\r\n                    checkSubmissionsResponse = setInterval ( () => {\r\n                        if(submissionResponses != '') {\r\n                            deleteSubmissionResponses() \r\n                            clearInterval(checkSubmissionsResponse);\r\n                        }\r\n                    },100)\r\n\r\n                }\r\n\r\n                clearInterval(whenAPILoaded);\r\n                console.log('delete from submissions script has been ran');\r\n                APILogBuffer(' delete all submissions script has been ran')\r\n            },500)\r\n        \r\n\r\n        \r\n        }\r\n        \r\n        // Search for push messages and execute pop ups etc\r\n\r\n        // get all form responss\r\n        var submissionResponses  = ''\r\n        //get text response\r\n        var p_pushText = document.querySelector('.push-text');\r\n        var APIStatus = document.querySelector('.api-status');\r\n        //number array text lives in\r\n        var responseAnswerNumber = 4;\r\n        //variale that is the current form submission index. eg [1] would be the second post\r\n        //False is init\r\n        var submissionResponseArrayIndex = false;\r\n        //amount of time between each form data check\r\n        var dataRefreshTime = 1000;\r\n        //previous responses array\r\n        var lastSubmissionResponseLength  = '';\r\n        //api key\r\n\r\n        //form ID number\r\n        var formID = '221101537081038'\r\n\r\n        //takes a string and injects it into the API status after 2 seconds\r\n        function APILogBuffer(log){\r\n            //after 10s, return the string (log)\r\n            setTimeout( () => {\r\n                APIStatus.innerHTML =  ' '+ log;\r\n            },2000)\r\n        }\r\n\r\n        //get form data function\r\n        function getFormData() {\r\n            debugger;\r\n            console.log('getting form data')\r\n        APILogBuffer('getting form data')\r\n            \r\n            //make request to API to recieve push notification\r\n            JF.getFormSubmissions(formID, function(response){\r\n                debugger;\r\n                console.log('recieved form submission data')\r\n                APILogBuffer('recieved form submission data')\r\n                \r\n                //if there are form submissions, store the submissions in the applicable variables\r\n                if(response.length >= 1){\r\n                    submissionResponses = response;\r\n                    //reverse submissionResponse so the latest push is always at the end of the array\r\n                    submissionResponses.reverse();  \r\n                }else{\r\n                    console.log('no responses recieved yet')\r\n                    APILogBuffer('no responses recieved yet')\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n\r\n        var checkForFormPushData = '';\r\n\r\n        //trigger the setInterval to check for form push data\r\n        function triggerFormPushDataSearch(){\r\n            debugger;\r\n            //check every second for a new post\r\n            checkForFormPushData = setInterval( () => {\r\n                debugger;\r\n                    getFormData();\r\n                    //if this is the first time push is being activated\r\n                    if(submissionResponseArrayIndex === false && submissionResponses != ''){\r\n                        var pushResponse = submissionResponses[0].answers[responseAnswerNumber];\r\n                        console.log('the new submission is' +submissionResponses)\r\n                        //end push response to insertPush function, which will handle push response to screen\r\n                        insertPush(pushResponse.answer)\r\n                        //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\r\n                        submissionResponseArrayIndex = 0;\r\n\r\n                        //stop interval once push is up\r\n                        stopFormApi()\r\n                        \r\n                        lastSubmissionResponseLength = submissionResponses.length;\r\n                    }\r\n                    //else if this is not the first time the push has been activated\r\n                    //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\r\n                    //if so, send next push\r\n                    else if (submissionResponseArrayIndex >= 0 && /* submissionResponseArrayIndex <= submissionResponses.length &&*/ submissionResponseArrayIndex < submissionResponses.length-1 && submissionResponses != ''){\r\n                        lastSubmissionResponseLength++;\r\n                        submissionResponseArrayIndex++;\r\n                        console.log('number of data in index is ' + submissionResponseArrayIndex + ' and data in actual array is' + submissionResponses.length)\r\n                        \r\n                        //pushResponse becomes the answer for the latest submission\r\n                        var pushResponse = submissionResponses[submissionResponseArrayIndex].answers[responseAnswerNumber];\r\n\r\n                            //end push response to insertPush function, which will handle push response to screen\r\n                        insertPush(pushResponse.answer);\r\n\r\n                        //stop interval once push is up\r\n                        stopFormApi()\r\n                    }\r\n\r\n\r\n\r\n                },dataRefreshTime)\r\n        }\r\n\r\n        //stop searching for push data function\r\n        function stopFormApi(){\r\n\r\n        /* setTimeout( () => { */\r\n                console.log('API has stopped');\r\n                APILogBuffer('API has stopped');\r\n                clearInterval(checkForFormPushData);\r\n        /* },5000) */\r\n\r\n        }\r\n\r\n\r\n        //*********************************************************************************\r\n\r\n        //CREATE ELEMENT FUNCTION\r\n        var popUpContainer = '';\r\n        var popUpText = '';\r\n        var popUpTextWrap = '';\r\n        var exitButton = ''\r\n        function createAndAppendPopup(pushText){\r\n\r\n            //create HTML elements (div wrapper and p text)\r\n            popUpContainer = document.createElement('div');\r\n            popUpContainer.classNameList.add('popup-container');\r\n            popUpTextWrap = document.createElement('div');\r\n            popUpTextWrap.classNameList.add('popup-text-wrap');\r\n            popUpText = document.createElement('p');\r\n            popUpText.classNameList.add('popup-text');\r\n            popUpText.innerHTML = 'placeholder';\r\n            exitButton = document.createElement('span');\r\n            exitButton.classNameList.add('popup-exit-button');\r\n            exitButton.innerHTML = 'X'\r\n            \r\n\r\n            //set initial styles\r\n            popUpContainer.style = \r\n            'display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 300px; height: 220px; background: #884ED5; color: black; z-index: 100; font-family: inherit; justify-content: flex-start; overflow: auto; flex-direction: column; border-radius: 8px;';\r\n            popUpTextWrap.style =\r\n            'display: flex; justify-content: center; align-items: center; flex-grow: 1'\r\n            popUpText.style = \r\n            'font-size: 20px; text-align: center; padding: 0px 15px; margin-top: 0px;';\r\n            exitButton.style = \r\n            'margin-right: 10px; margin-top: 5px; font-size: 25px; font-weight: bold; cursor: pointer; text-align: right';\r\n\r\n            //append pop up container\r\n            document.querySelector('body').appendChild(popUpContainer);\r\n\r\n            //append popup text and exit button\r\n            document.querySelector('body').appendChild(popUpContainer);\r\n            [exitButton,popUpTextWrap].forEach( element => {\r\n                popUpContainer.appendChild(element);\r\n            });\r\n            popUpTextWrap.appendChild(popUpText);\r\n        }\r\n        createAndAppendPopup();//create pop up\r\n\r\n\r\n\r\n\r\n        //insert push. use P for now\r\n        function insertPush(pushText){\r\n            p_pushText.innerHTML = pushText;\r\n        \r\n        //when push arrives, display push and insert push text\r\n        popUpContainer.style.display = 'flex'\r\n        popUpText.innerHTML = pushText;\r\n        //pushText.innerHTML = pushtext\r\n        }\r\n\r\n        //exit button click - hide push notificaiton and start searching for push data aain\r\n        exitButton.addEventListener(\"click\", () => {\r\n            triggerFormPushDataSearch();\r\n        popUpContainer.style.display = 'none';\r\n            console.log('start search')\r\n        APILogBuffer('start search')\r\n        })\r\n\r\n\r\n        //stop search button\r\n        document.querySelector('#force-stop').addEventListener(\"click\", () => {\r\n            clearInterval(checkForFormPushData)\r\n            console.log('stop search')\r\n        APILogBuffer('stop search')\r\n        })\r\n\r\n        //start search button\r\n        document.querySelector('#search-data').addEventListener(\"click\", () => {\r\n            triggerFormPushDataSearch();\r\n            console.log('start search')\r\n        APILogBuffer('start search')\r\n        })\r\n\r\n    },[]);\r\n\r\n    return(\r\n<>\r\n<div>\r\n\r\n\r\n   { /* init script below \r\n    <script id=\"jotform-api-script\" src=\"https://js.jotform.com/JotForm.js\"></script>\r\n    <script id=\"jotform-api-init\" defer>\r\n    JF.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \r\n    </script> \r\n\r\n    // TODO: import these scripts\r\n    <script src=\"./functions.js\">\r\n\r\n    </script>*/}\r\n\r\n    {/* CONTROL DASHBOARD */}\r\n\r\n    <button>\r\n    <a href=\"javascript:void( window.open( 'https://form.jotform.com/221101537081038', 'blank', 'scrollbars=yes, toolbar=no, width=700, height=500' ) ) \"> Send message </a>\r\n    </button>\r\n    \r\n    <button id='delete-submissions-btn'>\r\n    Delete all submissions\r\n    </button>\r\n    \r\n    <button id='get-user-info-btn'>\r\n    log usage info\r\n    </button>\r\n    \r\n\r\n    \r\n    <button id=\"force-stop\">\r\n    stop searching\r\n    </button>\r\n    <button id=\"search-data\">\r\n    start searching\r\n    </button>\r\n\r\n    <p>\r\n    <b>last push message: </b><span className='push-text'>Placeholder push text</span>\r\n    </p>\r\n    \r\n    <p>\r\n    <b>API status:</b><span className='api-status'></span>\r\n    </p>\r\n    \r\n    <p className='log-wrap'>\r\n    <b>API usage info log:</b><br/><pre className=\"log-info\"></pre>\r\n    </p>\r\n\r\n    <figure className=\"border-1 i-block\">\r\n        <img src=\"./Usage_Info.png\" alt=\"API log information\" style='width: 700px; max-width: 100%;'/>\r\n        <figcaption className='mv-5' style=\"text-align: center;\">What the log results mean</figcaption>\r\n    </figure>\r\n    \r\n\r\n    {/* // END CONTROL DASHBOARD */}\r\n    \r\n\r\n       \r\n\r\n</div>\r\n\r\n</>\r\n\r\n);\r\n\r\n\r\n}\r\nexport { OriginalUI }"],"mappings":"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"},"metadata":{},"sourceType":"module"}