{"ast":null,"code":"import { globalInfo } from '../global_Info.js';\n\n//add classList .disabled-btn\nfunction disableBtn(e) {\n  e.target.classList.add('disabled-btn');\n}\n\n//remove classList .disabled-btn\nfunction enableBtn(e) {\n  e.target.classList.remove('disabled-btn');\n}\n\n//***** \n// ALL FUNCTIONS RELATED TO DISABLING ENABLING BTNS\n\n//check if push is there\n\n//check if push available, if so run handBtnAbility (function that after 3 seconds..)\nfunction triggerHandleBtnAbility() {\n  var checkForExitBtn = setInterval(() => {\n    if (typeof globalInfo.exitButton === 'object') {\n      clearInterval(checkForExitBtn);\n      handleBtnAbility();\n    }\n  }, 200);\n}\nfunction handleBtnAbility() {\n  globalInfo.exitButton.addEventListener('click', e => {\n    handleNoNotificationsRemainding(e);\n    handleYesNotificationsActive(e);\n  });\n}\n\n// 1. when no more notifcations are avaialble\nvar timerToCheckIfNoNotifications = '';\nfunction handleNoNotificationsRemainding(e) {\n  timerToCheckIfNoNotifications = setTimeout(() => {\n    //stop search enabled\n    globalInfo.buttonStop.classList.remove('.disabled-btn');\n    clearInterval(timerToCheckIfNoNotifications);\n  }, 3000);\n}\n\n// 2. when there are still notifications available\nvar intervalCheckingExisitingNotifications = '';\nfunction handleYesNotificationsActive(e) {\n  //check for if notifications still exist every .2s\n  intervalCheckingExisitingNotifications = setInterval(() => {\n    if (globalInfo.popUpContainer.visibility === 'hidden') {\n      //destroy iteration of handleNoNotificationsRemaining.\n      clearTimeout(timerToCheckIfNotifications);\n      //stop checking for new notifications\n      clearInterval(intervalCheckingExisitingNotifications);\n    }\n  }, 200);\n}\n\n// - 'start search' clicked !DONE!\n//     - 'start search' btn disabled !DONE!\n// - check if push aviable !DONE!\n// - x clicked (event listener for x)\n//    1. - after 3 seconds ie: no more pushes to be shown\n//         - if push.style.visisibility == hidden \n//             - \"stop search btn\" enabled\n//                 - if \"stop search btn\" clicked\n//                     - disable stop search\n//                     - enable start search\n//             - clear this timeout\n//             - add string 'no new messages' to push placeholder\n\n// - 2. when the exit button is clicked and 3 second code starts\n// - if the pop up comes back, destroy the 3 second code\n//     - setinterval of 100ms checking if visisibility of popup\n//     - if its visisble, destroy 3 second code\n//     - otherwise clear this interval once the 3 seconds timeout code has been ran\n\nexport { disableBtn, enableBtn };","map":{"version":3,"names":["globalInfo","disableBtn","e","target","classList","add","enableBtn","remove","triggerHandleBtnAbility","checkForExitBtn","setInterval","exitButton","clearInterval","handleBtnAbility","addEventListener","handleNoNotificationsRemainding","handleYesNotificationsActive","timerToCheckIfNoNotifications","setTimeout","buttonStop","intervalCheckingExisitingNotifications","popUpContainer","visibility","clearTimeout","timerToCheckIfNotifications"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/designed_ui/apiStatus/functions.js"],"sourcesContent":["import {globalInfo} from '../global_Info.js';\r\n\r\n//add classList .disabled-btn\r\nfunction disableBtn(e){\r\n    e.target.classList.add('disabled-btn');\r\n}\r\n\r\n//remove classList .disabled-btn\r\nfunction enableBtn(e){\r\n    e.target.classList.remove('disabled-btn');\r\n}\r\n\r\n//***** \r\n// ALL FUNCTIONS RELATED TO DISABLING ENABLING BTNS\r\n\r\n//check if push is there\r\n\r\n//check if push available, if so run handBtnAbility (function that after 3 seconds..)\r\nfunction triggerHandleBtnAbility(){\r\n    \r\n    var checkForExitBtn = setInterval(() => {\r\n        if(typeof globalInfo.exitButton === 'object'){\r\n            clearInterval(checkForExitBtn);\r\n            handleBtnAbility();\r\n        }\r\n    }, 200);\r\n}\r\n\r\nfunction handleBtnAbility(){\r\n    globalInfo.exitButton.addEventListener('click',(e) => {\r\n        handleNoNotificationsRemainding(e);\r\n        handleYesNotificationsActive(e);\r\n    });\r\n}\r\n\r\n// 1. when no more notifcations are avaialble\r\nvar timerToCheckIfNoNotifications = '';\r\nfunction handleNoNotificationsRemainding(e){\r\n    timerToCheckIfNoNotifications = setTimeout(() =>{\r\n        //stop search enabled\r\n        globalInfo.buttonStop.classList.remove('.disabled-btn');\r\n        clearInterval(timerToCheckIfNoNotifications);\r\n    },3000);\r\n}\r\n\r\n// 2. when there are still notifications available\r\nvar intervalCheckingExisitingNotifications = '';\r\nfunction handleYesNotificationsActive(e){\r\n    //check for if notifications still exist every .2s\r\n    intervalCheckingExisitingNotifications = setInterval(()=>{\r\n        if(globalInfo.popUpContainer.visibility === 'hidden'){\r\n            //destroy iteration of handleNoNotificationsRemaining.\r\n            clearTimeout(timerToCheckIfNotifications);\r\n            //stop checking for new notifications\r\n            clearInterval(intervalCheckingExisitingNotifications);\r\n\r\n        }\r\n    },200);\r\n}\r\n\r\n\r\n// - 'start search' clicked !DONE!\r\n//     - 'start search' btn disabled !DONE!\r\n// - check if push aviable !DONE!\r\n// - x clicked (event listener for x)\r\n//    1. - after 3 seconds ie: no more pushes to be shown\r\n//         - if push.style.visisibility == hidden \r\n//             - \"stop search btn\" enabled\r\n//                 - if \"stop search btn\" clicked\r\n//                     - disable stop search\r\n//                     - enable start search\r\n//             - clear this timeout\r\n//             - add string 'no new messages' to push placeholder\r\n            \r\n\r\n// - 2. when the exit button is clicked and 3 second code starts\r\n// - if the pop up comes back, destroy the 3 second code\r\n//     - setinterval of 100ms checking if visisibility of popup\r\n//     - if its visisble, destroy 3 second code\r\n//     - otherwise clear this interval once the 3 seconds timeout code has been ran\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport{disableBtn,enableBtn}"],"mappings":"AAAA,SAAQA,UAAU,QAAO,mBAAmB;;AAE5C;AACA,SAASC,UAAU,CAACC,CAAC,EAAC;EAClBA,CAAC,CAACC,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AAC1C;;AAEA;AACA,SAASC,SAAS,CAACJ,CAAC,EAAC;EACjBA,CAAC,CAACC,MAAM,CAACC,SAAS,CAACG,MAAM,CAAC,cAAc,CAAC;AAC7C;;AAEA;AACA;;AAEA;;AAEA;AACA,SAASC,uBAAuB,GAAE;EAE9B,IAAIC,eAAe,GAAGC,WAAW,CAAC,MAAM;IACpC,IAAG,OAAOV,UAAU,CAACW,UAAU,KAAK,QAAQ,EAAC;MACzCC,aAAa,CAACH,eAAe,CAAC;MAC9BI,gBAAgB,EAAE;IACtB;EACJ,CAAC,EAAE,GAAG,CAAC;AACX;AAEA,SAASA,gBAAgB,GAAE;EACvBb,UAAU,CAACW,UAAU,CAACG,gBAAgB,CAAC,OAAO,EAAEZ,CAAC,IAAK;IAClDa,+BAA+B,CAACb,CAAC,CAAC;IAClCc,4BAA4B,CAACd,CAAC,CAAC;EACnC,CAAC,CAAC;AACN;;AAEA;AACA,IAAIe,6BAA6B,GAAG,EAAE;AACtC,SAASF,+BAA+B,CAACb,CAAC,EAAC;EACvCe,6BAA6B,GAAGC,UAAU,CAAC,MAAK;IAC5C;IACAlB,UAAU,CAACmB,UAAU,CAACf,SAAS,CAACG,MAAM,CAAC,eAAe,CAAC;IACvDK,aAAa,CAACK,6BAA6B,CAAC;EAChD,CAAC,EAAC,IAAI,CAAC;AACX;;AAEA;AACA,IAAIG,sCAAsC,GAAG,EAAE;AAC/C,SAASJ,4BAA4B,CAACd,CAAC,EAAC;EACpC;EACAkB,sCAAsC,GAAGV,WAAW,CAAC,MAAI;IACrD,IAAGV,UAAU,CAACqB,cAAc,CAACC,UAAU,KAAK,QAAQ,EAAC;MACjD;MACAC,YAAY,CAACC,2BAA2B,CAAC;MACzC;MACAZ,aAAa,CAACQ,sCAAsC,CAAC;IAEzD;EACJ,CAAC,EAAC,GAAG,CAAC;AACV;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAQA,SAAOnB,UAAU,EAACK,SAAS"},"metadata":{},"sourceType":"module"}