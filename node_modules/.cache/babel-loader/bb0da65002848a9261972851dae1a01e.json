{"ast":null,"code":"import{useEffect}from'react';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function OriginalUI(){useEffect(function(){{/* // /////////////////////////////////////\r\n        // LOG USER INFORMATION SCRIP */}var infoLogText=document.querySelector('.log-info');var jotformApiScript=document.querySelector('#jotform-api-script');var jotformApiInit=document.querySelector('#jotform-api-init');var body=document.querySelector('body');//FUNCTIONS>JS\n//..............................\nvar apiScriptSrc;//used to retrieve API URL prior to removing from DOM\n//delete script tag with jotform API URL\nfunction deletePreviousAPIScript(APIscript){apiScriptSrc=jotformApiScript.src;body.removeChild(APIscript);}//reinject the jotform URL inside a new script tag\nfunction reinjectAPIScript(APIScript){//debugger;\nAPIScript=document.createElement('script');//create new script\nAPIScript.src=apiScriptSrc;body.appendChild(APIScript);jotformApiScript=APIScript;//assign API script variable to be new script variable\n}//initialise the script\nfunction initScript(API){API.initialize({apiKey:\"f78958f78beefa5e3e88255e7559579b\"});}//....................................\nfunction logUserInfo(){//NOTE: for whatever reason, to get a fresh usage log the jotform API script needs to be reinserted on the page.\n//otherwise window.JF.getUsage will spit out the same response as when the script was first ran\n//deletePreviousAPIScript(jotformApiScript); //delete previous jotform script\n// !note! this is currently not working, seems to be a bug\n//reinjectAPIScript(jotformApiScript); //reinject previous jotform script\n//initScript(window.JF); //initialise jotform script\n//inject log onto the page\nwindow.JF.getUsage(function(response){//console.log(response);\ninfoLogText.innerHTML=JSON.stringify(response,null,2);//onsole.log(JSON.stringify(response,null,2))\n});}document.querySelector('#get-user-info-btn').addEventListener('click',function(){logUserInfo();});// END USER INFORMATION SCRIPT \n// /////////////////////////////////////\n// DELETE ALL SUBMISSIONS CODE BELOW\ndocument.querySelector('#delete-submissions-btn').addEventListener('click',function(){deleteAllPushSubmissions();});function deleteAllPushSubmissions(){//DELTE ALL SUBMISSIONS\n//************************************************\n//global variables\n//-----------------\n//ENTER API KEY\nvar apiKey=\"f78958f78beefa5e3e88255e7559579b\";//ENTER FORM ID (of form you want to delete submissions for)\nvar formID='221101537081038';//************************************************\n//fetch all submissions and then all delete submissions\n//-----------------\n//takes a string and injects it into the API status after 2 seconds\nfunction APILogBuffer(log){//after 10s, return the string (log)\nsetTimeout(function(){APIStatus.innerHTML=''+log;},2000);}var submissionResponses='';//becomes array of all submission responses\n//fetch all submission data into an array from the API\nfunction fetchSubmissionResponses(){window.JF.getFormSubmissions(formID,function(response){console.log('recieved form submission data');submissionResponses=response;});}//DELETE ALL SUBMISSIONS\nfunction deleteSubmissionResponses(){//forEach form submission response, delete the data\n//after this has been run, it will be as if a new form was created (no data)\ndebugger;for(var i=0;i<submissionResponses.length;i++){debugger;//via the id, for each response delete the response submission\nwindow.JF.deleteSubmission(submissionResponses[i].id,function(response){debugger;/**\r\n                         successful response including a text message\r\n                        .\r\n                        */console.log(\" \".concat(response));});//console.log(submissionResponses[i].id);\n}}//when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\nvar whenAPILoaded='';whenAPILoaded=setInterval(function(){if(window.JF!=''){//fetch submission responses\nfetchSubmissionResponses();//when API has retieved submission responses, run delete submission responses function\nvar checkSubmissionsResponse='';checkSubmissionsResponse=setInterval(function(){if(submissionResponses!=''){deleteSubmissionResponses();clearInterval(checkSubmissionsResponse);}},100);}clearInterval(whenAPILoaded);console.log('delete from submissions script has been ran');APILogBuffer(' delete all submissions script has been ran');},500);}// Search for push messages and execute pop ups etc\n// get all form responss\nvar submissionResponses='';//get text response\nvar p_pushText=document.querySelector('.push-text');var APIStatus=document.querySelector('.api-status');//number array text lives in\nvar responseAnswerNumber=4;//variale that is the current form submission index. eg [1] would be the second post\n//False is init\nvar submissionResponseArrayIndex=false;//amount of time between each form data check\nvar dataRefreshTime=1000;//previous responses array\nvar lastSubmissionResponseLength='';//api key\n//form ID number\nvar formID='221101537081038';//takes a string and injects it into the API status after 2 seconds\nfunction APILogBuffer(log){//after 10s, return the string (log)\nsetTimeout(function(){APIStatus.innerHTML=' '+log;},2000);}//get form data function\nfunction getFormData(){debugger;console.log('getting form data');APILogBuffer('getting form data');//make request to API to recieve push notification\nwindow.JF.getFormSubmissions(formID,function(response){debugger;console.log('recieved form submission data');APILogBuffer('recieved form submission data');//if there are form submissions, store the submissions in the applicable variables\nif(response.length>=1){submissionResponses=response;//reverse submissionResponse so the latest push is always at the end of the array\nsubmissionResponses.reverse();}else{console.log('no responses recieved yet');APILogBuffer('no responses recieved yet');}});}var checkForFormPushData='';//trigger the setInterval to check for form push data\nfunction triggerFormPushDataSearch(){debugger;//check every second for a new post\ncheckForFormPushData=setInterval(function(){debugger;getFormData();//if this is the first time push is being activated\nif(submissionResponseArrayIndex===false&&submissionResponses!=''){var pushResponse=submissionResponses[0].answers[responseAnswerNumber];console.log('the new submission is'+submissionResponses);//end push response to insertPush function, which will handle push response to screen\ninsertPush(pushResponse.answer);//store current response index, so eg submissionResponses[submissionResponseArrayIndex]\nsubmissionResponseArrayIndex=0;//stop interval once push is up\nstopFormApi();lastSubmissionResponseLength=submissionResponses.length;}//else if this is not the first time the push has been activated\n//check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\n//if so, send next push\nelse if(submissionResponseArrayIndex>=0&&/* submissionResponseArrayIndex <= submissionResponses.length &&*/submissionResponseArrayIndex<submissionResponses.length-1&&submissionResponses!=''){lastSubmissionResponseLength++;submissionResponseArrayIndex++;console.log('number of data in index is '+submissionResponseArrayIndex+' and data in actual array is'+submissionResponses.length);//pushResponse becomes the answer for the latest submission\nvar pushResponse=submissionResponses[submissionResponseArrayIndex].answers[responseAnswerNumber];//end push response to insertPush function, which will handle push response to screen\ninsertPush(pushResponse.answer);//stop interval once push is up\nstopFormApi();}},dataRefreshTime);}//stop searching for push data function\nfunction stopFormApi(){/* setTimeout( () => { */console.log('API has stopped');APILogBuffer('API has stopped');clearInterval(checkForFormPushData);/* },5000) */}//*********************************************************************************\n//CREATE ELEMENT FUNCTION\nvar popUpContainer='';var popUpText='';var popUpTextWrap='';var exitButton='';function createAndAppendPopup(pushText){debugger;//create HTML elements (div wrapper and p text)\npopUpContainer=document.createElement('div');popUpContainer.classList.add('popup-container');popUpTextWrap=document.createElement('div');popUpTextWrap.classList.add('popup-text-wrap');popUpText=document.createElement('p');popUpText.classList.add('popup-text');popUpText.innerHTML='placeholder';exitButton=document.createElement('span');exitButton.classList.add('popup-exit-button');exitButton.innerHTML='X';//set initial styles\npopUpContainer.style='display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 300px; height: 220px; background: #884ED5; color: black; z-index: 100; font-family: inherit; justify-content: flex-start; overflow: auto; flex-direction: column; border-radius: 8px;';popUpTextWrap.style='display: flex; justify-content: center; align-items: center; flex-grow: 1';popUpText.style='font-size: 20px; text-align: center; padding: 0px 15px; margin-top: 0px;';exitButton.style='margin-right: 10px; margin-top: 5px; font-size: 25px; font-weight: bold; cursor: pointer; text-align: right';//append pop up container\ndocument.querySelector('body').appendChild(popUpContainer);//append popup text and exit button\ndocument.querySelector('body').appendChild(popUpContainer);[exitButton,popUpTextWrap].forEach(function(element){popUpContainer.appendChild(element);});popUpTextWrap.appendChild(popUpText);}createAndAppendPopup();//create pop up\n//insert push. use P for now\nfunction insertPush(pushText){p_pushText.innerHTML=pushText;//when push arrives, display push and insert push text\npopUpContainer.style.display='flex';popUpText.innerHTML=pushText;//pushText.innerHTML = pushtext\n}//exit button click - hide push notificaiton and start searching for push data aain\nexitButton.addEventListener(\"click\",function(){triggerFormPushDataSearch();popUpContainer.style.display='none';console.log('start search');APILogBuffer('start search');});//stop search button\ndocument.querySelector('#force-stop').addEventListener(\"click\",function(){clearInterval(checkForFormPushData);console.log('stop search');APILogBuffer('stop search');});//start search button\ndocument.querySelector('#search-data').addEventListener(\"click\",function(){triggerFormPushDataSearch();console.log('start search');APILogBuffer('start search');});},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"javascript:void( window.open( 'https://form.jotform.com/221101537081038', 'blank', 'scrollbars=yes, toolbar=no, width=700, height=500' ) ) \",children:\" Send message \"})}),/*#__PURE__*/_jsx(\"button\",{id:\"delete-submissions-btn\",children:\"Delete all submissions\"}),/*#__PURE__*/_jsx(\"button\",{id:\"get-user-info-btn\",children:\"log usage info\"}),/*#__PURE__*/_jsx(\"button\",{id:\"force-stop\",children:\"stop searching\"}),/*#__PURE__*/_jsx(\"button\",{id:\"search-data\",children:\"start searching\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"last push message: \"}),/*#__PURE__*/_jsx(\"span\",{className:\"push-text\",children:\"Placeholder push text\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"API status:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"api-status\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-wrap\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"API usage info log:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"pre\",{className:\"log-info\"})]})]})});}export{OriginalUI};","map":{"version":3,"names":["useEffect","OriginalUI","infoLogText","document","querySelector","jotformApiScript","jotformApiInit","body","apiScriptSrc","deletePreviousAPIScript","APIscript","src","removeChild","reinjectAPIScript","APIScript","createElement","appendChild","initScript","API","initialize","apiKey","logUserInfo","window","JF","getUsage","response","innerHTML","JSON","stringify","addEventListener","deleteAllPushSubmissions","formID","APILogBuffer","log","setTimeout","APIStatus","submissionResponses","fetchSubmissionResponses","getFormSubmissions","console","deleteSubmissionResponses","i","length","deleteSubmission","id","whenAPILoaded","setInterval","checkSubmissionsResponse","clearInterval","p_pushText","responseAnswerNumber","submissionResponseArrayIndex","dataRefreshTime","lastSubmissionResponseLength","getFormData","reverse","checkForFormPushData","triggerFormPushDataSearch","pushResponse","answers","insertPush","answer","stopFormApi","popUpContainer","popUpText","popUpTextWrap","exitButton","createAndAppendPopup","pushText","classList","add","style","forEach","element","display"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/original_ui/OriginalUi.jsx"],"sourcesContent":["\r\nimport { useEffect } from 'react';\r\nimport './index.css'\r\n\r\nfunction OriginalUI(){\r\n\r\n    useEffect(() => {\r\n\r\n        {/* // /////////////////////////////////////\r\n        // LOG USER INFORMATION SCRIP */}\r\n\r\n        var infoLogText = document.querySelector('.log-info')\r\n        var jotformApiScript = document.querySelector('#jotform-api-script');\r\n        var jotformApiInit = document.querySelector('#jotform-api-init')\r\n\r\n        var body = document.querySelector('body')\r\n\r\n        //FUNCTIONS>JS\r\n        //..............................\r\n\r\n        var apiScriptSrc; //used to retrieve API URL prior to removing from DOM\r\n\r\n        //delete script tag with jotform API URL\r\n        function deletePreviousAPIScript(APIscript){\r\n            apiScriptSrc = jotformApiScript.src\r\n            body.removeChild(APIscript)\r\n        }\r\n\r\n        //reinject the jotform URL inside a new script tag\r\n        function reinjectAPIScript(APIScript){\r\n            //debugger;\r\n            APIScript = document.createElement('script'); //create new script\r\n            APIScript.src = apiScriptSrc\r\n            body.appendChild(APIScript) \r\n\r\n            jotformApiScript = APIScript; //assign API script variable to be new script variable\r\n        }\r\n\r\n        //initialise the script\r\n        function initScript(API){\r\n            API.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \r\n\r\n        }\r\n\r\n        //....................................\r\n\r\n        function logUserInfo(){\r\n\r\n            //NOTE: for whatever reason, to get a fresh usage log the jotform API script needs to be reinserted on the page.\r\n            //otherwise window.JF.getUsage will spit out the same response as when the script was first ran\r\n\r\n            //deletePreviousAPIScript(jotformApiScript); //delete previous jotform script\r\n\r\n                // !note! this is currently not working, seems to be a bug\r\n            //reinjectAPIScript(jotformApiScript); //reinject previous jotform script\r\n\r\n            //initScript(window.JF); //initialise jotform script\r\n\r\n            //inject log onto the page\r\n            window.JF.getUsage(function(response){\r\n                //console.log(response);\r\n                infoLogText.innerHTML = JSON.stringify(response,null,2)\r\n                //onsole.log(JSON.stringify(response,null,2))\r\n            });\r\n\r\n        }\r\n\r\n\r\n        document.querySelector('#get-user-info-btn').addEventListener('click', () => {\r\n            logUserInfo();\r\n        });\r\n\r\n    // END USER INFORMATION SCRIPT \r\n\r\n\r\n    // /////////////////////////////////////\r\n    // DELETE ALL SUBMISSIONS CODE BELOW\r\n\r\n\r\n        document.querySelector('#delete-submissions-btn').addEventListener('click', () => {\r\n            deleteAllPushSubmissions();\r\n        });\r\n        \r\n        function deleteAllPushSubmissions(){\r\n            \r\n            //DELTE ALL SUBMISSIONS\r\n            //************************************************\r\n\r\n            //global variables\r\n            //-----------------\r\n\r\n            //ENTER API KEY\r\n            var apiKey = \"f78958f78beefa5e3e88255e7559579b\"\r\n\r\n            //ENTER FORM ID (of form you want to delete submissions for)\r\n            var formID = '221101537081038'\r\n\r\n\r\n            //************************************************\r\n\r\n            //fetch all submissions and then all delete submissions\r\n            //-----------------\r\n\r\n            //takes a string and injects it into the API status after 2 seconds\r\n            function APILogBuffer(log){\r\n                //after 10s, return the string (log)\r\n                setTimeout( () => {\r\n                    APIStatus.innerHTML =  ''+ log;\r\n                },2000)\r\n            }\r\n\r\n            var submissionResponses = '' //becomes array of all submission responses\r\n\r\n            //fetch all submission data into an array from the API\r\n            function fetchSubmissionResponses(){\r\n\r\n                window.JF.getFormSubmissions(formID, function(response){\r\n                    console.log('recieved form submission data')\r\n\r\n                    submissionResponses = response;\r\n\r\n                })\r\n            }\r\n\r\n            //DELETE ALL SUBMISSIONS\r\n            function deleteSubmissionResponses(){\r\n            //forEach form submission response, delete the data\r\n            //after this has been run, it will be as if a new form was created (no data)\r\n\r\n                debugger;\r\n                for(var i = 0; i < submissionResponses.length; i++){\r\n                debugger;\r\n                    //via the id, for each response delete the response submission\r\n                    window.JF.deleteSubmission(submissionResponses[i].id, function(response){\r\n                    debugger;\r\n                        /**\r\n                         successful response including a text message\r\n                        .\r\n                        */\r\n                        console.log(` ${response}`);\r\n                    })\r\n                    //console.log(submissionResponses[i].id);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            //when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\r\n            var whenAPILoaded = '';\r\n            whenAPILoaded = setInterval( () => {\r\n                if(window.JF != ''){\r\n\r\n                    //fetch submission responses\r\n                    fetchSubmissionResponses();\r\n\r\n                    //when API has retieved submission responses, run delete submission responses function\r\n                    var checkSubmissionsResponse = '';\r\n                    checkSubmissionsResponse = setInterval ( () => {\r\n                        if(submissionResponses != '') {\r\n                            deleteSubmissionResponses() \r\n                            clearInterval(checkSubmissionsResponse);\r\n                        }\r\n                    },100)\r\n\r\n                }\r\n\r\n                clearInterval(whenAPILoaded);\r\n                console.log('delete from submissions script has been ran');\r\n                APILogBuffer(' delete all submissions script has been ran')\r\n            },500)\r\n        \r\n\r\n        \r\n        }\r\n        \r\n        // Search for push messages and execute pop ups etc\r\n\r\n        // get all form responss\r\n        var submissionResponses  = ''\r\n        //get text response\r\n        var p_pushText = document.querySelector('.push-text');\r\n        var APIStatus = document.querySelector('.api-status');\r\n        //number array text lives in\r\n        var responseAnswerNumber = 4;\r\n        //variale that is the current form submission index. eg [1] would be the second post\r\n        //False is init\r\n        var submissionResponseArrayIndex = false;\r\n        //amount of time between each form data check\r\n        var dataRefreshTime = 1000;\r\n        //previous responses array\r\n        var lastSubmissionResponseLength  = '';\r\n        //api key\r\n\r\n        //form ID number\r\n        var formID = '221101537081038'\r\n\r\n        //takes a string and injects it into the API status after 2 seconds\r\n        function APILogBuffer(log){\r\n            //after 10s, return the string (log)\r\n            setTimeout( () => {\r\n                APIStatus.innerHTML =  ' '+ log;\r\n            },2000)\r\n        }\r\n\r\n        //get form data function\r\n        function getFormData() {\r\n            debugger;\r\n            console.log('getting form data')\r\n        APILogBuffer('getting form data')\r\n            \r\n            //make request to API to recieve push notification\r\n            window.JF.getFormSubmissions(formID, function(response){\r\n                debugger;\r\n                console.log('recieved form submission data')\r\n                APILogBuffer('recieved form submission data')\r\n                \r\n                //if there are form submissions, store the submissions in the applicable variables\r\n                if(response.length >= 1){\r\n                    submissionResponses = response;\r\n                    //reverse submissionResponse so the latest push is always at the end of the array\r\n                    submissionResponses.reverse();  \r\n                }else{\r\n                    console.log('no responses recieved yet')\r\n                    APILogBuffer('no responses recieved yet')\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n\r\n        var checkForFormPushData = '';\r\n\r\n        //trigger the setInterval to check for form push data\r\n        function triggerFormPushDataSearch(){\r\n            debugger;\r\n            //check every second for a new post\r\n            checkForFormPushData = setInterval( () => {\r\n                debugger;\r\n                    getFormData();\r\n                    //if this is the first time push is being activated\r\n                    if(submissionResponseArrayIndex === false && submissionResponses != ''){\r\n                        var pushResponse = submissionResponses[0].answers[responseAnswerNumber];\r\n                        console.log('the new submission is' +submissionResponses)\r\n                        //end push response to insertPush function, which will handle push response to screen\r\n                        insertPush(pushResponse.answer)\r\n                        //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\r\n                        submissionResponseArrayIndex = 0;\r\n\r\n                        //stop interval once push is up\r\n                        stopFormApi()\r\n                        \r\n                        lastSubmissionResponseLength = submissionResponses.length;\r\n                    }\r\n                    //else if this is not the first time the push has been activated\r\n                    //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\r\n                    //if so, send next push\r\n                    else if (submissionResponseArrayIndex >= 0 && /* submissionResponseArrayIndex <= submissionResponses.length &&*/ submissionResponseArrayIndex < submissionResponses.length-1 && submissionResponses != ''){\r\n                        lastSubmissionResponseLength++;\r\n                        submissionResponseArrayIndex++;\r\n                        console.log('number of data in index is ' + submissionResponseArrayIndex + ' and data in actual array is' + submissionResponses.length)\r\n                        \r\n                        //pushResponse becomes the answer for the latest submission\r\n                        var pushResponse = submissionResponses[submissionResponseArrayIndex].answers[responseAnswerNumber];\r\n\r\n                            //end push response to insertPush function, which will handle push response to screen\r\n                        insertPush(pushResponse.answer);\r\n\r\n                        //stop interval once push is up\r\n                        stopFormApi()\r\n                    }\r\n\r\n\r\n\r\n                },dataRefreshTime)\r\n        }\r\n\r\n        //stop searching for push data function\r\n        function stopFormApi(){\r\n\r\n        /* setTimeout( () => { */\r\n                console.log('API has stopped');\r\n                APILogBuffer('API has stopped');\r\n                clearInterval(checkForFormPushData);\r\n        /* },5000) */\r\n\r\n        }\r\n\r\n\r\n        //*********************************************************************************\r\n\r\n        //CREATE ELEMENT FUNCTION\r\n        var popUpContainer = '';\r\n        var popUpText = '';\r\n        var popUpTextWrap = '';\r\n        var exitButton = ''\r\n        function createAndAppendPopup(pushText){\r\ndebugger;\r\n            //create HTML elements (div wrapper and p text)\r\n            popUpContainer = document.createElement('div');\r\n            popUpContainer.classList.add('popup-container');\r\n            popUpTextWrap = document.createElement('div');\r\n            popUpTextWrap.classList.add('popup-text-wrap');\r\n            popUpText = document.createElement('p');\r\n            popUpText.classList.add('popup-text');\r\n            popUpText.innerHTML = 'placeholder';\r\n            exitButton = document.createElement('span');\r\n            exitButton.classList.add('popup-exit-button');\r\n            exitButton.innerHTML = 'X'\r\n            \r\n\r\n            //set initial styles\r\n            popUpContainer.style = \r\n            'display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 300px; height: 220px; background: #884ED5; color: black; z-index: 100; font-family: inherit; justify-content: flex-start; overflow: auto; flex-direction: column; border-radius: 8px;';\r\n            popUpTextWrap.style =\r\n            'display: flex; justify-content: center; align-items: center; flex-grow: 1'\r\n            popUpText.style = \r\n            'font-size: 20px; text-align: center; padding: 0px 15px; margin-top: 0px;';\r\n            exitButton.style = \r\n            'margin-right: 10px; margin-top: 5px; font-size: 25px; font-weight: bold; cursor: pointer; text-align: right';\r\n\r\n            //append pop up container\r\n            document.querySelector('body').appendChild(popUpContainer);\r\n\r\n            //append popup text and exit button\r\n            document.querySelector('body').appendChild(popUpContainer);\r\n            [exitButton,popUpTextWrap].forEach( element => {\r\n                popUpContainer.appendChild(element);\r\n            });\r\n            popUpTextWrap.appendChild(popUpText);\r\n        }\r\n        createAndAppendPopup();//create pop up\r\n\r\n\r\n\r\n\r\n        //insert push. use P for now\r\n        function insertPush(pushText){\r\n            p_pushText.innerHTML = pushText;\r\n        \r\n        //when push arrives, display push and insert push text\r\n        popUpContainer.style.display = 'flex'\r\n        popUpText.innerHTML = pushText;\r\n        //pushText.innerHTML = pushtext\r\n        }\r\n\r\n        //exit button click - hide push notificaiton and start searching for push data aain\r\n        exitButton.addEventListener(\"click\", () => {\r\n            triggerFormPushDataSearch();\r\n        popUpContainer.style.display = 'none';\r\n            console.log('start search')\r\n        APILogBuffer('start search')\r\n        })\r\n\r\n\r\n        //stop search button\r\n        document.querySelector('#force-stop').addEventListener(\"click\", () => {\r\n            clearInterval(checkForFormPushData)\r\n            console.log('stop search')\r\n        APILogBuffer('stop search')\r\n        })\r\n\r\n        //start search button\r\n        document.querySelector('#search-data').addEventListener(\"click\", () => {\r\n            triggerFormPushDataSearch();\r\n            console.log('start search')\r\n        APILogBuffer('start search')\r\n        })\r\n\r\n    },[]);\r\n\r\n    return(\r\n<>\r\n<div>\r\n\r\n\r\n   { /* init script below \r\n    <script id=\"jotform-api-script\" src=\"https://js.jotform.com/JotForm.js\"></script>\r\n    <script id=\"jotform-api-init\" defer>\r\n    window.JF.initialize( {apiKey: \"f78958f78beefa5e3e88255e7559579b\"} ); \r\n    </script> \r\n\r\n    // TODO: import these scripts\r\n    <script src=\"./functions.js\">\r\n\r\n    </script>*/}\r\n\r\n    {/* CONTROL DASHBOARD */}\r\n\r\n    <button>\r\n    <a href=\"javascript:void( window.open( 'https://form.jotform.com/221101537081038', 'blank', 'scrollbars=yes, toolbar=no, width=700, height=500' ) ) \"> Send message </a>\r\n    </button>\r\n    \r\n    <button id='delete-submissions-btn'>\r\n    Delete all submissions\r\n    </button>\r\n    \r\n    <button id='get-user-info-btn'>\r\n    log usage info\r\n    </button>\r\n    \r\n\r\n    \r\n    <button id=\"force-stop\">\r\n    stop searching\r\n    </button>\r\n    <button id=\"search-data\">\r\n    start searching\r\n    </button>\r\n\r\n    <p>\r\n    <b>last push message: </b><span className='push-text'>Placeholder push text</span>\r\n    </p>\r\n    \r\n    <p>\r\n    <b>API status:</b><span className='api-status'></span>\r\n    </p>\r\n    \r\n    <div className='log-wrap'>\r\n    <b>API usage info log:</b><br/><pre className=\"log-info\"></pre>\r\n    </div>\r\n\r\n{/*\r\n    <figure className=\"border-1 i-block\">\r\n        <img src=\"./Usage_Info.png\" alt=\"API log information\" style={{width: \"700px\", maxWidth: \"100%\"}}/>\r\n        <figcaption className='mv-5' style={{textAlign: \"center\"}}>What the log results mean</figcaption>\r\n    </figure>\r\n*/}\r\n    \r\n\r\n    {/* // END CONTROL DASHBOARD */}\r\n    \r\n\r\n       \r\n\r\n</div>\r\n\r\n</>\r\n\r\n);\r\n\r\n\r\n}\r\nexport { OriginalUI }"],"mappings":"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"},"metadata":{},"sourceType":"module"}