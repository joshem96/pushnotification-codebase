{"ast":null,"code":"import { globalInfo, initialiseGlobalInfo } from '../global_Info.js';\nfunction deleteAllPushSubmissions() {\n  console.log('delete script started');\n  debugger;\n  initialiseGlobalInfo();\n\n  //DELTE ALL SUBMISSIONS\n  //************************************************\n\n  //global variables\n  //-----------------\n\n  //ENTER API KEY\n  // var apiKey = \"f78958f78beefa5e3e88255e7559579b\"\n\n  //ENTER FORM ID (of form you want to delete submissions for)\n  // var formID = '221101537081038'\n\n  //************************************************\n\n  //fetch all submissions and then all delete submissions\n  //-----------------\n\n  //takes a string and injects it into the API status after 2 seconds\n  function APILogBuffer(log) {\n    //after 10s, return the string (log)\n    setTimeout(() => {\n      globalInfo.APIStatus.innerHTML = '' + log;\n    }, 2000);\n  }\n\n  //var submissionResponses = '' //becomes array of all submission responses\n\n  //fetch all submission data into an array from the API\n  function fetchSubmissionResponses() {\n    window.JF.getFormSubmissions(globalInfo.formID, function (response) {\n      console.log('recieved form submission data');\n      globalInfo.submissionResponses = response;\n    });\n  }\n\n  //DELETE ALL SUBMISSIONS\n  function deleteSubmissionResponses() {\n    //forEach form submission response, delete the data\n    //after this has been run, it will be as if a new form was created (no data)\n\n    debugger;\n    for (var i = 0; i < globalInfo.submissionResponses.length; i++) {\n      debugger;\n      //via the id, for each response delete the response submission\n      window.JF.deleteSubmission(globalInfo.submissionResponses[i].id, function (response) {\n        debugger;\n        /**\r\n         successful response including a text message\r\n        .\r\n        */\n        console.log(` ${response}`);\n      });\n      //console.log(submissionResponses[i].id);\n    }\n  }\n\n  //when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\n  var whenAPILoaded = '';\n  whenAPILoaded = setInterval(() => {\n    if (window.JF != '') {\n      //fetch submission responses\n      fetchSubmissionResponses();\n\n      //when API has retieved submission responses, run delete submission responses function\n      var checkSubmissionsResponse = '';\n      checkSubmissionsResponse = setInterval(() => {\n        if (globalInfo.submissionResponses != '') {\n          deleteSubmissionResponses();\n          clearInterval(checkSubmissionsResponse);\n        }\n      }, 100);\n    }\n    clearInterval(whenAPILoaded);\n    console.log('delete from submissions script has been ran');\n    APILogBuffer(' delete all submissions script has been ran');\n  }, 500);\n  console.log(globalInfo);\n}\nexport { deleteAllPushSubmissions };","map":{"version":3,"names":["globalInfo","initialiseGlobalInfo","deleteAllPushSubmissions","console","log","APILogBuffer","setTimeout","APIStatus","innerHTML","fetchSubmissionResponses","window","JF","getFormSubmissions","formID","response","submissionResponses","deleteSubmissionResponses","i","length","deleteSubmission","id","whenAPILoaded","setInterval","checkSubmissionsResponse","clearInterval"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/designed_ui/submitDeleteMessages/functions.js"],"sourcesContent":["\r\n        import { globalInfo,initialiseGlobalInfo } from '../global_Info.js';\r\n        function deleteAllPushSubmissions(){\r\n\r\n            console.log('delete script started');\r\n\r\n            debugger;\r\n            \r\n            initialiseGlobalInfo();\r\n\r\n            //DELTE ALL SUBMISSIONS\r\n            //************************************************\r\n\r\n            //global variables\r\n            //-----------------\r\n\r\n            //ENTER API KEY\r\n            // var apiKey = \"f78958f78beefa5e3e88255e7559579b\"\r\n\r\n            //ENTER FORM ID (of form you want to delete submissions for)\r\n            // var formID = '221101537081038'\r\n\r\n\r\n            //************************************************\r\n\r\n            //fetch all submissions and then all delete submissions\r\n            //-----------------\r\n\r\n            //takes a string and injects it into the API status after 2 seconds\r\n            function APILogBuffer(log){\r\n                //after 10s, return the string (log)\r\n                setTimeout( () => {\r\n                    globalInfo.APIStatus.innerHTML =  ''+ log;\r\n                },2000)\r\n            }\r\n\r\n            //var submissionResponses = '' //becomes array of all submission responses\r\n\r\n            //fetch all submission data into an array from the API\r\n            function fetchSubmissionResponses(){\r\n\r\n                window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n                    console.log('recieved form submission data')\r\n\r\n                    globalInfo.submissionResponses = response;\r\n\r\n                })\r\n            }\r\n\r\n            //DELETE ALL SUBMISSIONS\r\n            function deleteSubmissionResponses(){\r\n            //forEach form submission response, delete the data\r\n            //after this has been run, it will be as if a new form was created (no data)\r\n\r\n                debugger;\r\n                for(var i = 0; i < globalInfo.submissionResponses.length; i++){\r\n                debugger;\r\n                    //via the id, for each response delete the response submission\r\n                    window.JF.deleteSubmission(globalInfo.submissionResponses[i].id, function(response){\r\n                    debugger;\r\n                        /**\r\n                         successful response including a text message\r\n                        .\r\n                        */\r\n                        console.log(` ${response}`);\r\n                    })\r\n                    //console.log(submissionResponses[i].id);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            //when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\r\n            var whenAPILoaded = '';\r\n            whenAPILoaded = setInterval( () => {\r\n                if(window.JF != ''){\r\n\r\n                    //fetch submission responses\r\n                    fetchSubmissionResponses();\r\n\r\n                    //when API has retieved submission responses, run delete submission responses function\r\n                    var checkSubmissionsResponse = '';\r\n                    checkSubmissionsResponse = setInterval ( () => {\r\n                        if(globalInfo.submissionResponses != '') {\r\n                            deleteSubmissionResponses() \r\n                            clearInterval(checkSubmissionsResponse);\r\n                        }\r\n                    },100)\r\n\r\n                }\r\n\r\n                clearInterval(whenAPILoaded);\r\n                console.log('delete from submissions script has been ran');\r\n                APILogBuffer(' delete all submissions script has been ran')\r\n            },500)\r\n        \r\n\r\n        console.log(globalInfo)\r\n        }\r\n\r\n        export{deleteAllPushSubmissions}"],"mappings":"AACQ,SAASA,UAAU,EAACC,oBAAoB,QAAQ,mBAAmB;AACnE,SAASC,wBAAwB,GAAE;EAE/BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EAEpC;EAEAH,oBAAoB,EAAE;;EAEtB;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;;EAGA;;EAEA;EACA;;EAEA;EACA,SAASI,YAAY,CAACD,GAAG,EAAC;IACtB;IACAE,UAAU,CAAE,MAAM;MACdN,UAAU,CAACO,SAAS,CAACC,SAAS,GAAI,EAAE,GAAEJ,GAAG;IAC7C,CAAC,EAAC,IAAI,CAAC;EACX;;EAEA;;EAEA;EACA,SAASK,wBAAwB,GAAE;IAE/BC,MAAM,CAACC,EAAE,CAACC,kBAAkB,CAACZ,UAAU,CAACa,MAAM,EAAE,UAASC,QAAQ,EAAC;MAC9DX,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAE5CJ,UAAU,CAACe,mBAAmB,GAAGD,QAAQ;IAE7C,CAAC,CAAC;EACN;;EAEA;EACA,SAASE,yBAAyB,GAAE;IACpC;IACA;;IAEI;IACA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,UAAU,CAACe,mBAAmB,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;MAC9D;MACI;MACAP,MAAM,CAACC,EAAE,CAACQ,gBAAgB,CAACnB,UAAU,CAACe,mBAAmB,CAACE,CAAC,CAAC,CAACG,EAAE,EAAE,UAASN,QAAQ,EAAC;QACnF;QACI;AACxB;AACA;AACA;QACwBX,OAAO,CAACC,GAAG,CAAE,IAAGU,QAAS,EAAC,CAAC;MAC/B,CAAC,CAAC;MACF;IAEJ;EAEJ;;EAEA;EACA,IAAIO,aAAa,GAAG,EAAE;EACtBA,aAAa,GAAGC,WAAW,CAAE,MAAM;IAC/B,IAAGZ,MAAM,CAACC,EAAE,IAAI,EAAE,EAAC;MAEf;MACAF,wBAAwB,EAAE;;MAE1B;MACA,IAAIc,wBAAwB,GAAG,EAAE;MACjCA,wBAAwB,GAAGD,WAAW,CAAG,MAAM;QAC3C,IAAGtB,UAAU,CAACe,mBAAmB,IAAI,EAAE,EAAE;UACrCC,yBAAyB,EAAE;UAC3BQ,aAAa,CAACD,wBAAwB,CAAC;QAC3C;MACJ,CAAC,EAAC,GAAG,CAAC;IAEV;IAEAC,aAAa,CAACH,aAAa,CAAC;IAC5BlB,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1DC,YAAY,CAAC,6CAA6C,CAAC;EAC/D,CAAC,EAAC,GAAG,CAAC;EAGVF,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;AACvB;AAEA,SAAOE,wBAAwB"},"metadata":{},"sourceType":"module"}