{"ast":null,"code":"import{globalInfo}from'./global_Info.js';import{insertPush,popupElementsObject}from'./pushExample/functions';//takes a string and injects it into the API status after 2 seconds\nfunction APILogBuffer(log){//after 10s, return the string (log)\nsetTimeout(function(){return globalInfo.APIStatus.innerHTML=log;},2000);}//fetch all submission data into an array from the API\nfunction fetchSubmissionResponses(){window.JF.getFormSubmissions(globalInfo.formID,function(response){//add all responses to globalInfo so accesible globally\nglobalInfo.submissionResponses=response;});}//get form data function and store into globeInfo\nfunction getFormData(){APILogBuffer('getting form data');//make request to API to recieve push notification\nwindow.JF.getFormSubmissions(globalInfo.formID,function(response){console.log(' date of recieved fetch '+new Date());APILogBuffer('recieved form submission data');console.log(globalInfo);//if delete submissions script has been ran\n//which means the stored submissionsResponses length will be greater than the API response\n//reset all necessary values, as if the script hasn't been ran yet\n//response.length === 1 && globalInfo.submissionResponses.length > 1\n//TODO: fix: globalInfo.submissionResponses.length > 1 && response.length < globalInfo.submissionResponses.length\nif(response.length===1&&globalInfo.submissionResponses.length>1){// assign reponse to globalInfo appriate value\nglobalInfo.submissionResponses=response;//reverse submissionResponse so the latest push is always at the end of the array\nglobalInfo.submissionResponses.reverse();//reset the arrayIndex, so it starts pulling from the start of the new responses\nglobalInfo.submissionResponseArrayIndex=false;console.log('array index has been reset');}//if there are form submissions, store the submissions in global info as appropriate values\nelse if(response.length>=1){// assign reponse to globalInfo appriate value\nglobalInfo.submissionResponses=response;//reverse submissionResponse so the latest push is always at the end of the array\nglobalInfo.submissionResponses.reverse();}//if no form submisions yet, update status log with relevant info & enable \"stop searching btn\"\nelse{APILogBuffer('no responses recieved yet');console.log(globalInfo);globalInfo.buttonStop.classList.remove('disabled-btn');}});}//trigger the setInterval to check for form push data\nvar checkForFormPushData='';function triggerFormPushDataSearch(){//check every second for a new post\ncheckForFormPushData=setInterval(function(){//get form data responses\ngetFormData();console.log('date of init fetch'+new Date());//if this is the first time push is being activated\nif(globalInfo.submissionResponseArrayIndex===false&&globalInfo.submissionResponses!=''){//assign push response to variable\nvar pushResponse=globalInfo.submissionResponses[0].answers[globalInfo.responseAnswerNumber];//insert newly recieved push response into push and display push (visa insertPush())\ninsertPush(pushResponse.answer);//store current response index, so eg submissionResponses[submissionResponseArrayIndex]\nglobalInfo.submissionResponseArrayIndex=0;//stop interval once push is up\nstopFormApi();globalInfo.lastSubmissionResponseLength=globalInfo.submissionResponses.length;}//else if this is not the first time the push has been activated\n//check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\n//if so, send next push\nelse if(globalInfo.submissionResponseArrayIndex>=0&&globalInfo.submissionResponseArrayIndex<globalInfo.submissionResponses.length-1&&globalInfo.submissionResponses!=''){globalInfo.lastSubmissionResponseLength++;globalInfo.submissionResponseArrayIndex++;//pushResponse becomes the answer for the latest submission\nvar pushResponse=globalInfo.submissionResponses[globalInfo.submissionResponseArrayIndex].answers[globalInfo.responseAnswerNumber];//end push response to insertPush function, which will handle push response to screen\ninsertPush(pushResponse.answer);//stop interval once push is up\nstopFormApi();}//else if this is last push in array and that push has already been shown, show stop button\nelse if(globalInfo.submissionResponseArrayIndex===globalInfo.submissionResponses.length-1&&popupElementsObject.popUpContainer.style.visibility!='visible'){console.log(new Date()+' last push statement ran');globalInfo.buttonStop.classList.remove('disabled-btn');//stopFormApi();\n}},globalInfo.dataRefreshTime);}//stop searching for push data function\nfunction stopFormApi(){APILogBuffer('API has stopped');clearInterval(checkForFormPushData);// stop interval thats checking for form responses/data\n}//CHECK IF LAST PUSH IS THE LAST IN OF SUBMISSION RESPONSES\nfunction isCurrentPushLastPush(){debugger;console.log(globalInfo);var result=globalInfo.submissionResponseArrayIndex===globalInfo.submissionResponses.length-1?true:false;return result;}//when user has no more notifcations remaining or none have been sent yet, show \"stop searching\" btn\n//is triggered on events like the \"exit button\" \nfunction handleExitOfLastPush(){if(isCurrentPushLastPush()){debugger;globalInfo.buttonStop.classList.remove('disabled-btn');}}export{APILogBuffer,fetchSubmissionResponses,triggerFormPushDataSearch,checkForFormPushData,handleExitOfLastPush,getFormData};","map":{"version":3,"names":["globalInfo","insertPush","popupElementsObject","APILogBuffer","log","setTimeout","APIStatus","innerHTML","fetchSubmissionResponses","window","JF","getFormSubmissions","formID","response","submissionResponses","getFormData","console","Date","length","reverse","submissionResponseArrayIndex","buttonStop","classList","remove","checkForFormPushData","triggerFormPushDataSearch","setInterval","pushResponse","answers","responseAnswerNumber","answer","stopFormApi","lastSubmissionResponseLength","popUpContainer","style","visibility","dataRefreshTime","clearInterval","isCurrentPushLastPush","result","handleExitOfLastPush"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/designed_ui/global_functions.js"],"sourcesContent":["import {globalInfo} from './global_Info.js';\r\nimport{insertPush,popupElementsObject} from './pushExample/functions';\r\n\r\n\r\n//takes a string and injects it into the API status after 2 seconds\r\nfunction APILogBuffer(log){\r\n    //after 10s, return the string (log)\r\n    setTimeout( () => globalInfo.APIStatus.innerHTML =  log,2000);\r\n}\r\n\r\n\r\n//fetch all submission data into an array from the API\r\nfunction fetchSubmissionResponses(){\r\n    window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n        //add all responses to globalInfo so accesible globally\r\n        globalInfo.submissionResponses = response;\r\n    });\r\n}\r\n\r\n\r\n//get form data function and store into globeInfo\r\nfunction getFormData() {\r\n\r\n    APILogBuffer('getting form data');\r\n    \r\n    //make request to API to recieve push notification\r\n    window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n        console.log(' date of recieved fetch ' + new Date);\r\n        APILogBuffer('recieved form submission data');\r\n        console.log(globalInfo)\r\n        \r\n        //if delete submissions script has been ran\r\n        //which means the stored submissionsResponses length will be greater than the API response\r\n        //reset all necessary values, as if the script hasn't been ran yet\r\n        //response.length === 1 && globalInfo.submissionResponses.length > 1\r\n        //TODO: fix: globalInfo.submissionResponses.length > 1 && response.length < globalInfo.submissionResponses.length\r\n        if(response.length === 1 && globalInfo.submissionResponses.length > 1 ){\r\n            // assign reponse to globalInfo appriate value\r\n            globalInfo.submissionResponses = response; \r\n            //reverse submissionResponse so the latest push is always at the end of the array\r\n            globalInfo.submissionResponses.reverse();  \r\n            //reset the arrayIndex, so it starts pulling from the start of the new responses\r\n            globalInfo.submissionResponseArrayIndex = false;\r\n\r\n            console.log('array index has been reset')\r\n        }\r\n        //if there are form submissions, store the submissions in global info as appropriate values\r\n        else if(response.length >= 1){\r\n            // assign reponse to globalInfo appriate value\r\n            globalInfo.submissionResponses = response; \r\n            //reverse submissionResponse so the latest push is always at the end of the array\r\n            globalInfo.submissionResponses.reverse();  \r\n        }\r\n        //if no form submisions yet, update status log with relevant info & enable \"stop searching btn\"\r\n        else{\r\n            APILogBuffer('no responses recieved yet');\r\n            console.log(globalInfo);\r\n            globalInfo.buttonStop.classList.remove('disabled-btn');\r\n        }\r\n\r\n    });\r\n}\r\n\r\n\r\n//trigger the setInterval to check for form push data\r\nvar checkForFormPushData = '';\r\nfunction triggerFormPushDataSearch(){\r\n\r\n    //check every second for a new post\r\n    checkForFormPushData = setInterval( () => {\r\n\r\n        //get form data responses\r\n        getFormData();\r\n        console.log('date of init fetch' + new Date)\r\n        //if this is the first time push is being activated\r\n        if(globalInfo.submissionResponseArrayIndex === false && globalInfo.submissionResponses != ''){\r\n            //assign push response to variable\r\n            var pushResponse = globalInfo.submissionResponses[0].answers[globalInfo.responseAnswerNumber];\r\n\r\n            //insert newly recieved push response into push and display push (visa insertPush())\r\n            insertPush(pushResponse.answer);\r\n\r\n            //store current response index, so eg submissionResponses[submissionResponseArrayIndex]\r\n            globalInfo.submissionResponseArrayIndex = 0;\r\n  \r\n            //stop interval once push is up\r\n            stopFormApi();\r\n            \r\n            globalInfo.lastSubmissionResponseLength = globalInfo.submissionResponses.length;\r\n        }\r\n        //else if this is not the first time the push has been activated\r\n        //check if the submissionResponseArray has had another push added since last time, via submissionResponseArrayIndex\r\n        //if so, send next push\r\n        else if (globalInfo.submissionResponseArrayIndex >= 0 && globalInfo.submissionResponseArrayIndex < globalInfo.submissionResponses.length-1 && globalInfo.submissionResponses != ''){\r\n            globalInfo.lastSubmissionResponseLength++;\r\n            globalInfo.submissionResponseArrayIndex++;\r\n            \r\n            //pushResponse becomes the answer for the latest submission\r\n            var pushResponse = globalInfo.submissionResponses[globalInfo.submissionResponseArrayIndex].answers[globalInfo.responseAnswerNumber];\r\n\r\n            //end push response to insertPush function, which will handle push response to screen\r\n            insertPush(pushResponse.answer);\r\n\r\n            //stop interval once push is up\r\n            stopFormApi();\r\n        }\r\n        //else if this is last push in array and that push has already been shown, show stop button\r\n        else if (globalInfo.submissionResponseArrayIndex === globalInfo.submissionResponses.length-1\r\n            && popupElementsObject.popUpContainer.style.visibility != 'visible'){\r\n            console.log(new Date + ' last push statement ran');\r\n            globalInfo.buttonStop.classList.remove('disabled-btn');\r\n            //stopFormApi();\r\n        }\r\n        \r\n\r\n    },globalInfo.dataRefreshTime)\r\n}\r\n\r\n\r\n//stop searching for push data function\r\nfunction stopFormApi(){\r\n    APILogBuffer('API has stopped');\r\n    clearInterval(checkForFormPushData); // stop interval thats checking for form responses/data\r\n}\r\n\r\n//CHECK IF LAST PUSH IS THE LAST IN OF SUBMISSION RESPONSES\r\nfunction isCurrentPushLastPush(){\r\n    debugger;\r\n    console.log(globalInfo);\r\n    var result = (globalInfo.submissionResponseArrayIndex === globalInfo.submissionResponses.length-1) ? true : false;\r\n    return result;\r\n}\r\n//when user has no more notifcations remaining or none have been sent yet, show \"stop searching\" btn\r\n//is triggered on events like the \"exit button\" \r\nfunction handleExitOfLastPush(){\r\n    if(isCurrentPushLastPush()){\r\n        debugger;\r\n        globalInfo.buttonStop.classList.remove('disabled-btn');\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {APILogBuffer,fetchSubmissionResponses,triggerFormPushDataSearch,checkForFormPushData,handleExitOfLastPush,getFormData}\r\n\r\n"],"mappings":"AAAA,OAAQA,UAAU,KAAO,kBAAkB,CAC3C,OAAOC,UAAU,CAACC,mBAAmB,KAAO,yBAAyB,CAGrE;AACA,QAASC,aAAY,CAACC,GAAG,CAAC,CACtB;AACAC,UAAU,CAAE,iBAAML,WAAU,CAACM,SAAS,CAACC,SAAS,CAAIH,GAAG,GAAC,IAAI,CAAC,CACjE,CAGA;AACA,QAASI,yBAAwB,EAAE,CAC/BC,MAAM,CAACC,EAAE,CAACC,kBAAkB,CAACX,UAAU,CAACY,MAAM,CAAE,SAASC,QAAQ,CAAC,CAC9D;AACAb,UAAU,CAACc,mBAAmB,CAAGD,QAAQ,CAC7C,CAAC,CAAC,CACN,CAGA;AACA,QAASE,YAAW,EAAG,CAEnBZ,YAAY,CAAC,mBAAmB,CAAC,CAEjC;AACAM,MAAM,CAACC,EAAE,CAACC,kBAAkB,CAACX,UAAU,CAACY,MAAM,CAAE,SAASC,QAAQ,CAAC,CAC9DG,OAAO,CAACZ,GAAG,CAAC,0BAA0B,CAAG,GAAIa,KAAI,GAAC,CAClDd,YAAY,CAAC,+BAA+B,CAAC,CAC7Ca,OAAO,CAACZ,GAAG,CAACJ,UAAU,CAAC,CAEvB;AACA;AACA;AACA;AACA;AACA,GAAGa,QAAQ,CAACK,MAAM,GAAK,CAAC,EAAIlB,UAAU,CAACc,mBAAmB,CAACI,MAAM,CAAG,CAAC,CAAE,CACnE;AACAlB,UAAU,CAACc,mBAAmB,CAAGD,QAAQ,CACzC;AACAb,UAAU,CAACc,mBAAmB,CAACK,OAAO,EAAE,CACxC;AACAnB,UAAU,CAACoB,4BAA4B,CAAG,KAAK,CAE/CJ,OAAO,CAACZ,GAAG,CAAC,4BAA4B,CAAC,CAC7C,CACA;AAAA,IACK,IAAGS,QAAQ,CAACK,MAAM,EAAI,CAAC,CAAC,CACzB;AACAlB,UAAU,CAACc,mBAAmB,CAAGD,QAAQ,CACzC;AACAb,UAAU,CAACc,mBAAmB,CAACK,OAAO,EAAE,CAC5C,CACA;AAAA,IACI,CACAhB,YAAY,CAAC,2BAA2B,CAAC,CACzCa,OAAO,CAACZ,GAAG,CAACJ,UAAU,CAAC,CACvBA,UAAU,CAACqB,UAAU,CAACC,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC,CAC1D,CAEJ,CAAC,CAAC,CACN,CAGA;AACA,GAAIC,qBAAoB,CAAG,EAAE,CAC7B,QAASC,0BAAyB,EAAE,CAEhC;AACAD,oBAAoB,CAAGE,WAAW,CAAE,UAAM,CAEtC;AACAX,WAAW,EAAE,CACbC,OAAO,CAACZ,GAAG,CAAC,oBAAoB,CAAG,GAAIa,KAAI,GAAC,CAC5C;AACA,GAAGjB,UAAU,CAACoB,4BAA4B,GAAK,KAAK,EAAIpB,UAAU,CAACc,mBAAmB,EAAI,EAAE,CAAC,CACzF;AACA,GAAIa,aAAY,CAAG3B,UAAU,CAACc,mBAAmB,CAAC,CAAC,CAAC,CAACc,OAAO,CAAC5B,UAAU,CAAC6B,oBAAoB,CAAC,CAE7F;AACA5B,UAAU,CAAC0B,YAAY,CAACG,MAAM,CAAC,CAE/B;AACA9B,UAAU,CAACoB,4BAA4B,CAAG,CAAC,CAE3C;AACAW,WAAW,EAAE,CAEb/B,UAAU,CAACgC,4BAA4B,CAAGhC,UAAU,CAACc,mBAAmB,CAACI,MAAM,CACnF,CACA;AACA;AACA;AAAA,IACK,IAAIlB,UAAU,CAACoB,4BAA4B,EAAI,CAAC,EAAIpB,UAAU,CAACoB,4BAA4B,CAAGpB,UAAU,CAACc,mBAAmB,CAACI,MAAM,CAAC,CAAC,EAAIlB,UAAU,CAACc,mBAAmB,EAAI,EAAE,CAAC,CAC/Kd,UAAU,CAACgC,4BAA4B,EAAE,CACzChC,UAAU,CAACoB,4BAA4B,EAAE,CAEzC;AACA,GAAIO,aAAY,CAAG3B,UAAU,CAACc,mBAAmB,CAACd,UAAU,CAACoB,4BAA4B,CAAC,CAACQ,OAAO,CAAC5B,UAAU,CAAC6B,oBAAoB,CAAC,CAEnI;AACA5B,UAAU,CAAC0B,YAAY,CAACG,MAAM,CAAC,CAE/B;AACAC,WAAW,EAAE,CACjB,CACA;AAAA,IACK,IAAI/B,UAAU,CAACoB,4BAA4B,GAAKpB,UAAU,CAACc,mBAAmB,CAACI,MAAM,CAAC,CAAC,EACrFhB,mBAAmB,CAAC+B,cAAc,CAACC,KAAK,CAACC,UAAU,EAAI,SAAS,CAAC,CACpEnB,OAAO,CAACZ,GAAG,CAAC,GAAIa,KAAI,GAAG,0BAA0B,CAAC,CAClDjB,UAAU,CAACqB,UAAU,CAACC,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC,CACtD;AACJ,CAGJ,CAAC,CAACvB,UAAU,CAACoC,eAAe,CAAC,CACjC,CAGA;AACA,QAASL,YAAW,EAAE,CAClB5B,YAAY,CAAC,iBAAiB,CAAC,CAC/BkC,aAAa,CAACb,oBAAoB,CAAC,CAAE;AACzC,CAEA;AACA,QAASc,sBAAqB,EAAE,CAC5B,SACAtB,OAAO,CAACZ,GAAG,CAACJ,UAAU,CAAC,CACvB,GAAIuC,OAAM,CAAIvC,UAAU,CAACoB,4BAA4B,GAAKpB,UAAU,CAACc,mBAAmB,CAACI,MAAM,CAAC,CAAC,CAAI,IAAI,CAAG,KAAK,CACjH,MAAOqB,OAAM,CACjB,CACA;AACA;AACA,QAASC,qBAAoB,EAAE,CAC3B,GAAGF,qBAAqB,EAAE,CAAC,CACvB,SACAtC,UAAU,CAACqB,UAAU,CAACC,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC,CAC1D,CACJ,CAIA,OAAQpB,YAAY,CAACK,wBAAwB,CAACiB,yBAAyB,CAACD,oBAAoB,CAACgB,oBAAoB,CAACzB,WAAW"},"metadata":{},"sourceType":"module"}