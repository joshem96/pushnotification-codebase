{"ast":null,"code":"import{globalInfo}from'../global_Info.js';import{APILogBuffer,fetchSubmissionResponses}from'../global_functions';function deleteAllPushSubmissions(){console.log('delete script started');debugger;//DELTE ALL SUBMISSIONS\n//************************************************\n//global variables\n//-----------------\n//ENTER API KEY\n// var apiKey = \"f78958f78beefa5e3e88255e7559579b\"\n//ENTER FORM ID (of form you want to delete submissions for)\n// var formID = '221101537081038'\n//************************************************\n//fetch all submissions and then all delete submissions\n//-----------------\n// //takes a string and injects it into the API status after 2 seconds\n// function APILogBuffer(log){\n//     //after 10s, return the string (log)\n//     setTimeout( () => {\n//         globalInfo.APIStatus.innerHTML =  '' + log;\n//     },2000)\n// }\n// //fetch all submission data into an array from the API\n// function fetchSubmissionResponses(){\n//     window.JF.getFormSubmissions(globalInfo.formID, function(response){\n//         console.log('recieved form submission data')    \n//         //add all responses to globalInfo so accesible globally\n//         globalInfo.submissionResponses = response;\n//     })\n// }\n//DELETE ALL SUBMISSIONS\nfunction deleteSubmissionResponses(){//forEach form submission response, delete the data\n//after this has been run, it will be as if a new form was created (no data)\ndebugger;for(var i=0;i<globalInfo.submissionResponses.length;i++){debugger;//via the id, for each response delete the response submission\nwindow.JF.deleteSubmission(globalInfo.submissionResponses[i].id,function(response){debugger;/**\r\n                         successful response including a text message\r\n                        .\r\n                        */console.log(\" \".concat(response));});//console.log(submissionResponses[i].id);\n}}function executeDeleteSubmissionResponses(){//when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\nvar whenAPILoaded='';whenAPILoaded=setInterval(function(){if(window.JF!=''){debugger;//fetch submission responses\nfetchSubmissionResponses();//when API has retieved submission responses, run delete submission responses function\nvar checkSubmissionsResponse='';checkSubmissionsResponse=setInterval(function(){if(globalInfo.submissionResponses!=''){deleteSubmissionResponses();clearInterval(checkSubmissionsResponse);}},100);}clearInterval(whenAPILoaded);console.log('delete from submissions script has been ran');APILogBuffer('all submissions have been deleted.');},500);}executeDeleteSubmissionResponses();console.log('submissions deleted');console.log(globalInfo);}export{deleteAllPushSubmissions};","map":{"version":3,"names":["globalInfo","APILogBuffer","fetchSubmissionResponses","deleteAllPushSubmissions","console","log","deleteSubmissionResponses","i","submissionResponses","length","window","JF","deleteSubmission","id","response","executeDeleteSubmissionResponses","whenAPILoaded","setInterval","checkSubmissionsResponse","clearInterval"],"sources":["C:/Users/Josh/Documents/Code/push-ui-v1/my-app/src/designed_ui/submitDeleteMessages/functions.js"],"sourcesContent":["\r\n        import {globalInfo} from '../global_Info.js';\r\n        import{APILogBuffer,fetchSubmissionResponses} from '../global_functions';\r\n        function deleteAllPushSubmissions(){\r\n\r\n            console.log('delete script started');\r\n\r\n            debugger;\r\n            \r\n\r\n            //DELTE ALL SUBMISSIONS\r\n            //************************************************\r\n\r\n            //global variables\r\n            //-----------------\r\n\r\n            //ENTER API KEY\r\n            // var apiKey = \"f78958f78beefa5e3e88255e7559579b\"\r\n\r\n            //ENTER FORM ID (of form you want to delete submissions for)\r\n            // var formID = '221101537081038'\r\n\r\n\r\n            //************************************************\r\n\r\n            //fetch all submissions and then all delete submissions\r\n            //-----------------\r\n\r\n            // //takes a string and injects it into the API status after 2 seconds\r\n            // function APILogBuffer(log){\r\n            //     //after 10s, return the string (log)\r\n            //     setTimeout( () => {\r\n            //         globalInfo.APIStatus.innerHTML =  '' + log;\r\n            //     },2000)\r\n            // }\r\n\r\n\r\n            // //fetch all submission data into an array from the API\r\n            // function fetchSubmissionResponses(){\r\n            //     window.JF.getFormSubmissions(globalInfo.formID, function(response){\r\n            //         console.log('recieved form submission data')    \r\n            //         //add all responses to globalInfo so accesible globally\r\n            //         globalInfo.submissionResponses = response;\r\n            //     })\r\n            // }\r\n\r\n            //DELETE ALL SUBMISSIONS\r\n            function deleteSubmissionResponses(){\r\n            //forEach form submission response, delete the data\r\n            //after this has been run, it will be as if a new form was created (no data)\r\n\r\n                debugger;\r\n                for(var i = 0; i < globalInfo.submissionResponses.length; i++){\r\n                debugger;\r\n                    //via the id, for each response delete the response submission\r\n                    window.JF.deleteSubmission(globalInfo.submissionResponses[i].id, function(response){\r\n                    debugger;\r\n                        /**\r\n                         successful response including a text message\r\n                        .\r\n                        */\r\n                        console.log(` ${response}`);\r\n                    })\r\n                    //console.log(submissionResponses[i].id);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            function executeDeleteSubmissionResponses(){\r\n                //when API has loaded (window.JF != ''), run the following scripts to execute the deletion of all form submissions\r\n                var whenAPILoaded = '';\r\n                whenAPILoaded = setInterval( () => {\r\n                    if(window.JF != ''){\r\n                        debugger;\r\n                        //fetch submission responses\r\n                        fetchSubmissionResponses();\r\n\r\n                        //when API has retieved submission responses, run delete submission responses function\r\n                        var checkSubmissionsResponse = '';\r\n                        checkSubmissionsResponse = setInterval ( () => {\r\n                            if(globalInfo.submissionResponses != '') {\r\n                                deleteSubmissionResponses() \r\n                                clearInterval(checkSubmissionsResponse);\r\n                            }\r\n                        },100)\r\n\r\n                    }\r\n\r\n                    clearInterval(whenAPILoaded);\r\n                    console.log('delete from submissions script has been ran');\r\n                    APILogBuffer('all submissions have been deleted.')\r\n                },500);\r\n            }\r\n            executeDeleteSubmissionResponses();\r\n\r\n\r\n        console.log('submissions deleted');\r\n        console.log(globalInfo)\r\n        }\r\n\r\n        export{ deleteAllPushSubmissions }"],"mappings":"AACQ,OAAQA,UAAU,KAAO,mBAAmB,CAC5C,OAAOC,YAAY,CAACC,wBAAwB,KAAO,qBAAqB,CACxE,QAASC,yBAAwB,EAAE,CAE/BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAEpC,SAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAASC,0BAAyB,EAAE,CACpC;AACA;AAEI,SACA,IAAI,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGP,UAAU,CAACQ,mBAAmB,CAACC,MAAM,CAAEF,CAAC,EAAE,CAAC,CAC9D,SACI;AACAG,MAAM,CAACC,EAAE,CAACC,gBAAgB,CAACZ,UAAU,CAACQ,mBAAmB,CAACD,CAAC,CAAC,CAACM,EAAE,CAAE,SAASC,QAAQ,CAAC,CACnF,SACI;AACxB;AACA;AACA,0BACwBV,OAAO,CAACC,GAAG,YAAKS,QAAQ,EAAG,CAC/B,CAAC,CAAC,CACF;AAEJ,CAEJ,CAEA,QAASC,iCAAgC,EAAE,CACvC;AACA,GAAIC,cAAa,CAAG,EAAE,CACtBA,aAAa,CAAGC,WAAW,CAAE,UAAM,CAC/B,GAAGP,MAAM,CAACC,EAAE,EAAI,EAAE,CAAC,CACf,SACA;AACAT,wBAAwB,EAAE,CAE1B;AACA,GAAIgB,yBAAwB,CAAG,EAAE,CACjCA,wBAAwB,CAAGD,WAAW,CAAG,UAAM,CAC3C,GAAGjB,UAAU,CAACQ,mBAAmB,EAAI,EAAE,CAAE,CACrCF,yBAAyB,EAAE,CAC3Ba,aAAa,CAACD,wBAAwB,CAAC,CAC3C,CACJ,CAAC,CAAC,GAAG,CAAC,CAEV,CAEAC,aAAa,CAACH,aAAa,CAAC,CAC5BZ,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC,CAC1DJ,YAAY,CAAC,oCAAoC,CAAC,CACtD,CAAC,CAAC,GAAG,CAAC,CACV,CACAc,gCAAgC,EAAE,CAGtCX,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClCD,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC,CACvB,CAEA,OAAQG,wBAAwB"},"metadata":{},"sourceType":"module"}